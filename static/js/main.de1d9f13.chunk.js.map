{"version":3,"sources":["theme/style-utils.ts","component/bg-container/index.style.tsx","component/bg-container/index.tsx","utils/cdn-resource.ts","component/anim/index.tsx","page/game-page/completion-dialog.tsx","component/icons/index.tsx","component/question-answer/index.style.ts","component/question-answer/index.tsx","view/game-title/index.tsx","page/game-page/page-header.tsx","component/flip-card/index.style.ts","component/flip-card/index.tsx","page/game-page/page-main.tsx","page/game-page/hooks/flip-card.ts","utils/randomizer.ts","page/game-page/index.tsx","page/game-page/hooks/use-bool.ts","page/landing-page/index.style.ts","page/landing-page/index.tsx","view/story-title/index.tsx","component/center-box/index.tsx","page/story-page/story-card.style.ts","page/story-page/story-card.tsx","page/story-page/page-main.tsx","page/story-page/index.tsx","theme/theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["gradient","colors","type","join","linearGradient","bg","zIndex","position","height","width","background","useStyles","makeStyles","container","header","props","headerHeight","paddingTop","particlesContainer","BgContainer","p","styles","styleOptions","className","id","options","particlesConf","main","getResource","resource","Images","gift","broom","child","iconBroom","iconChild","iconSunnyHome","iconTogether","pieceBroom","pieceChild","pieceSunnyHome","pieceTogether","sunnyHome","together","Anim","repeat","style","animationDuration","duration","animationDelay","delay","children","Gift","history","useHistory","Box","onClick","push","STORY_PAGE","bgcolor","borderRadius","display","justifyContent","src","alt","GameCompletionDialog","Dialog","open","alignItems","Typography","align","variant","mb","Icon","imgPath","IconBroom","IconChild","IconSunnyHome","IconTogether","iconSize","question","color","answer","backgroundColor","QuestionAnswer","revealed","GameTitle","margin","DottedLine","letterSpacing","GameHeader","Container","flexDirection","revealedCardNames","includes","CHILD","SUNNY_HOME","TOGETHER","BROOM","url","img","bgImg","card","border","borderColor","amber","transition","backgroundImage","frontSideImg","backgroundSize","backgroundRepeat","cardRevealed","transform","FlipCard","role","GameMain","renderRow","cards","map","c","m","onCardClick","key","content","R","useFlipCardGame","hookParams","array","initCards","concat","index","name","locked","useState","x","order","Math","random","setCards","useEffect","revealedCards","filter","length","cardsContent","eq","setTimeout","useMemo","sort","completed","every","flipCardById","changedCards","gameSetting","GamePage","init","s","setS","useBoolState","completionDialogState","openCompletionDialog","button","buttonFont","fontWeight","LandingPage","Card","Button","GAME_PAGE","StoryTitle","CenterBox","storyCard","marginBottom","iconContainer","storyCardBottom","StoryCard","mt","iconImg","title","mainImg","bottomImg","storyCardSetting","StoryPageMain","autoPlay","i","StoryPage","theme","createMuiTheme","palette","text","primary","secondary","App","ThemeProvider","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.de1d9f13.chunk.js","sourcesContent":["const gradient = (colors: string[], type: 'linear' | 'radial') => `${type}-gradient(${colors.join(',')})`\nexport const linearGradient = (colors: Parameters<typeof gradient>[0]) => gradient(colors, 'linear')\nexport const radialGradient = (colors: Parameters<typeof gradient>[0]) => gradient(colors, 'radial')\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\nimport { linearGradient } from 'theme/style-utils'\n\nexport type StyleProps = {\n\theaderHeight?: string\n}\n\nconst particlesContainer: CSSProperties = {\n\tposition: 'absolute',\n\theight: '100vh',\n\twidth: '100vw'\n}\nconst bg: CSSProperties = {\n\tzIndex: -1,\n\tposition: 'absolute',\n\theight: '100vh',\n\twidth: '100vw',\n\tbackground: linearGradient(['rgb(82, 49, 101)', 'rgb(221, 164, 146)'])\n}\nconst header = { height: (props: StyleProps) => props.headerHeight ?? '16vh', paddingTop: '6vh', zIndex: 1 }\nconst container: CSSProperties = {\n\theight: '100vh',\n\tposition: 'relative'\n}\n\nexport const useStyles = makeStyles({ container, header, particlesContainer, bg })\n","import React from 'react'\nimport { StyleProps, useStyles } from './index.style'\nimport Particles from 'react-tsparticles'\nimport particlesConf from 'component/particles/particles-config-snow.json'\n\nexport type BgContainerProps = {\n\theader: JSX.Element | JSX.Element[]\n\tmain: JSX.Element | JSX.Element[]\n} & { styleOptions?: StyleProps }\n\nconst BgContainer = (p: BgContainerProps) => {\n\tconst styles = useStyles(p.styleOptions)\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.bg} />\n\t\t\t<div className={styles.particlesContainer}>\n\t\t\t\t<Particles id='tsparticles' className={styles.particlesContainer} options={particlesConf} />\n\t\t\t</div>\n\t\t\t<header className={styles.header}>{p.header}</header>\n\t\t\t<main>{p.main}</main>\n\t\t</div>\n\t)\n}\nexport default BgContainer\n","const cdnPath = `https://images-1304250879.cos.ap-nanjing.myqcloud.com/`\nexport const getResource = (resource: string) => cdnPath + resource\n\nexport const Images = {\n\tgift: getResource('gift.svg'),\n\tbroom: getResource('broom.svg'),\n\tchild: getResource('child.svg'),\n\ticonBroom: getResource('icon-broom.svg'),\n\ticonChild: getResource('icon-child.svg'),\n\ticonSunnyHome: getResource('icon-sunny-home.svg'),\n\ticonTogether: getResource('icon-together.svg'),\n\tpieceBroom: getResource('piece-broom.svg'),\n\tpieceChild: getResource('piece-child.svg'),\n\tpieceSunnyHome: getResource('piece-sunny-home.svg'),\n\tpieceTogether: getResource('piece-together.svg'),\n\tsunnyHome: getResource('sunny-home.svg'),\n\ttogether: getResource('together.svg'),\n\tbg: getResource('bg.svg')\n}\n","import React from 'react'\n\nexport type AnimType = 'bounce' | 'bounceIn'\n\nexport type AnimProps = {\n\ttype: AnimType\n\tchildren: JSX.Element\n\tduration?: number\n\tdelay?: number\n\trepeat?: boolean\n}\n\nconst Anim = (p: AnimProps) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={`\n        animate__animated\n        animate__${p.type}\n        ${p.repeat ? 'animate__infinite\tinfinite' : ''}\n      `}\n\t\t\tstyle={{\n\t\t\t\tanimationDuration: `${p.duration || 1}s`,\n\t\t\t\tanimationDelay: `${p.delay || 0}s`\n\t\t\t}}\n\t\t>\n\t\t\t{p.children}\n\t\t</div>\n\t)\n}\n\nexport default Anim\n","import { Box, Dialog, DialogProps, Typography } from '@material-ui/core'\nimport { STORY_PAGE } from 'App'\nimport Anim from 'component/anim'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Images } from 'utils/cdn-resource'\n\nconst Gift = () => {\n\tconst history = useHistory()\n\tconst onGiftClick = () => {\n\t\thistory.push(STORY_PAGE)\n\t}\n\n\treturn (\n\t\t<Anim type='bounce' repeat>\n\t\t\t<Box\n\t\t\t\tonClick={onGiftClick}\n\t\t\t\tbgcolor='rgb(252, 227, 227)'\n\t\t\t\tborderRadius='50%'\n\t\t\t\theight='80px'\n\t\t\t\twidth='80px'\n\t\t\t\tdisplay='flex'\n\t\t\t\tjustifyContent='center'\n\t\t\t>\n\t\t\t\t<img src={Images.gift} alt='gift' />\n\t\t\t</Box>\n\t\t</Anim>\n\t)\n}\n\nexport type GameCompletionDialogProps = {} & Pick<DialogProps, 'open'>\nconst GameCompletionDialog = (p: GameCompletionDialogProps) => {\n\treturn (\n\t\t<Dialog open={p.open}>\n\t\t\t<Box width='60vw' height='36vh' p={2}>\n\t\t\t\t<Box height='18vh' display='flex' justifyContent='center' alignItems='center'>\n\t\t\t\t\t<Gift />\n\t\t\t\t</Box>\n\t\t\t\t<Typography align='center' variant='h5'>\n\t\t\t\t\t解锁故事成功\n\t\t\t\t</Typography>\n\t\t\t\t<Box mb={1} />\n\t\t\t\t<Typography align='center' variant='body1'>\n\t\t\t\t\t恭喜完成挑战，符号的意义解锁中…\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t</Dialog>\n\t)\n}\nexport default GameCompletionDialog\n","import React from 'react'\nimport { Images } from 'utils/cdn-resource'\n\nexport type IconProps = {\n\timgPath: string\n}\nexport const Icon = (p: IconProps) => {\n\treturn (\n\t\t<img\n\t\t\tstyle={{\n\t\t\t\theight: '28pt',\n\t\t\t\twidth: '25pt'\n\t\t\t}}\n\t\t\tsrc={p.imgPath}\n\t\t\talt='icon'\n\t\t></img>\n\t)\n}\n\nexport const IconBroom = () => <Icon imgPath={Images.iconBroom} />\nexport const IconChild = () => <Icon imgPath={Images.iconChild} />\nexport const IconSunnyHome = () => <Icon imgPath={Images.iconSunnyHome} />\nexport const IconTogether = () => <Icon imgPath={Images.iconTogether} />\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\n\nconst iconSize = {\n\theight: '50px',\n\twidth: '50px',\n\tborderRadius: '50%'\n}\n\nconst question: CSSProperties = {\n\t...iconSize,\n\tcolor: 'white'\n}\nconst answer: CSSProperties = {\n\t...iconSize,\n\tbackgroundColor: 'rgb(252, 227, 227)'\n}\nexport const useStyles = makeStyles({ question, answer })\n","import { Box } from '@material-ui/core'\nimport HelpIcon from '@material-ui/icons/Help'\nimport Anim from 'component/anim'\nimport React from 'react'\nimport { useStyles } from './index.style'\n\nexport type QuestionAnswerProps = {\n\trevealed?: boolean\n\tanswer: JSX.Element\n}\nconst QuestionAnswer = (p: QuestionAnswerProps) => {\n\tconst styles = useStyles()\n\treturn p.revealed ? (\n\t\t<Anim type='bounceIn'>\n\t\t\t<Box display='flex' justifyContent='center' alignItems='center' className={styles.answer}>\n\t\t\t\t{p.answer}\n\t\t\t</Box>\n\t\t</Anim>\n\t) : (\n\t\t<HelpIcon className={styles.question} />\n\t)\n}\nexport default QuestionAnswer\n","import { Box, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport type GameTitleProps = {};\nconst GameTitle = (p: GameTitleProps) => {\n  return (\n    <div>\n      <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\">\n        记忆考验\n      </Typography>\n      <Box margin={2} />\n    </div>\n  );\n};\nexport default GameTitle;\n","import { Container, Box } from '@material-ui/core'\nimport { IconChild, IconSunnyHome, IconTogether, IconBroom } from 'component/icons'\nimport QuestionAnswer from 'component/question-answer'\nimport React from 'react'\nimport GameTitle from 'view/game-title'\nimport { BROOM, CHILD, SUNNY_HOME, TOGETHER } from '.'\n\nconst DottedLine = () => {\n\treturn (\n\t\t<Box color='white' letterSpacing={2}>\n\t\t\t.....\n\t\t</Box>\n\t)\n}\n\nexport type GameTitleProps = {\n\trevealedCardNames: string[]\n}\nconst GameHeader = (p: GameTitleProps) => {\n\treturn (\n\t\t<>\n\t\t\t<GameTitle />\n\t\t\t<Container>\n\t\t\t\t<Box display='flex' flexDirection='row' alignItems='center' justifyContent='space-between' width='90vw'>\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(CHILD)} answer={<IconChild />} />\n\t\t\t\t\t<DottedLine />\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(SUNNY_HOME)} answer={<IconSunnyHome />} />\n\t\t\t\t\t<DottedLine />\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(TOGETHER)} answer={<IconTogether />} />\n\t\t\t\t\t<DottedLine />\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(BROOM)} answer={<IconBroom />} />\n\t\t\t\t</Box>\n\t\t\t</Container>\n\t\t</>\n\t)\n}\nexport default GameHeader\n","import { colors, makeStyles } from '@material-ui/core'\nimport { Images } from 'utils/cdn-resource'\n\nconst url = (img: string) => `url(${img})`\nconst bgImg = Images.bg\n\nconst cardHeight = '130px'\nconst cardWidth = '160px'\n\ntype CardStyleProps = {\n\tfrontSideImg: string\n}\n\nconst card = {\n\theight: cardHeight,\n\twidth: cardWidth,\n\tborder: '1px solid',\n\tborderColor: colors.amber[200],\n\tborderRadius: '12%',\n\ttransition: 'all 0.2s ease-in',\n\tbackgroundImage: (p: CardStyleProps) => url(p.frontSideImg),\n\tbackgroundSize: 'cover',\n\tbackgroundRepeat: 'no-repeat'\n}\n\nconst cardRevealed = {\n\t...card,\n\ttransform: 'rotateY(180deg)',\n\tbackgroundImage: url(bgImg)\n}\n\nexport const useStyles = makeStyles({\n\tcard,\n\tcardRevealed\n})\n","import React from \"react\";\nimport { useStyles } from \"./index.style\";\n\nexport type FlipCardProps = {\n  revealed: boolean;\n  frontSideImg: string;\n};\n\nconst FlipCard = (p: FlipCardProps) => {\n  const styles = useStyles({ frontSideImg: p.frontSideImg });\n  return (\n    <div\n      role=\"none\"\n      className={p.revealed ? styles.card : styles.cardRevealed}\n    />\n  );\n};\n\nexport default FlipCard;\n","import * as R from 'ramda'\nimport { Box, Container } from '@material-ui/core'\nimport FlipCard from 'component/flip-card'\nimport React from 'react'\nimport { FlipCardType } from './hooks/flip-card'\n\nexport type GameMainProps = {\n\tcards: FlipCardType[]\n\tonCardClick: (p: FlipCardType) => any\n}\n\nconst GameMain = (p: GameMainProps) => {\n\tconst renderRow = (cards: FlipCardType[]) => (\n\t\t<Box display='flex' flexDirection='row'>\n\t\t\t{cards.map(c => (\n\t\t\t\t<Box m={1} onClick={() => p.onCardClick(c)} key={c.id}>\n\t\t\t\t\t<FlipCard revealed={c.revealed} frontSideImg={c.content} />\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t</Box>\n\t)\n\treturn (\n\t\t<Container>\n\t\t\t<Box display='flex' flexDirection='column' alignItems='center'>\n\t\t\t\t{renderRow(R.slice(0, 2, p.cards))}\n\t\t\t\t{renderRow(R.slice(2, 4, p.cards))}\n\t\t\t\t{renderRow(R.slice(4, 6, p.cards))}\n\t\t\t\t{renderRow(R.slice(6, 8, p.cards))}\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\nexport default GameMain\n","import * as R from 'ramda'\nimport { useEffect, useMemo, useState } from 'react'\nimport { shuffleArray } from 'utils/randomizer'\n\nexport type FlipCardType = {\n\tid: number\n\tname: string\n\tcontent: string\n\trevealed: boolean\n\tlocked: boolean\n}\n\nconst delayTimeForPlayingFlippingAnim = 400\n\nexport const useFlipCardGame = (hookParams: Pick<FlipCardType, 'content' | 'name'>[]) => {\n\tconst initCards = hookParams.concat(hookParams).map((p, index) => ({\n\t\tid: index,\n\t\tname: p.name,\n\t\tcontent: p.content,\n\t\trevealed: false,\n\t\tlocked: false\n\t}))\n\n\tconst [cards, setCards] = useState<FlipCardType[]>(shuffleArray(initCards))\n\n\t/** when there are 2 cards being revealed, the content of them will be checked */\n\t/** 1. same content -> keep them revealed & mark them locked (locked means not operable any more) */\n\t/** 2. different content -> hide them */\n\tuseEffect(() => {\n\t\tconst revealedCards = cards.filter(R.compose(R.not, R.prop('locked'))).filter(R.prop('revealed'))\n\t\tif (revealedCards.length !== 2) return\n\t\tconst cardsContent = revealedCards.map(R.prop('content'))\n\t\tconst eq = R.equals(cardsContent[0])\n\t\tconst areSameCards = R.all(eq)(cardsContent)\n\t\tif (areSameCards)\n\t\t\tsetTimeout(\n\t\t\t\t() => setCards(cards.map(c => (c.revealed ? { ...c, locked: true } : c))),\n\t\t\t\tdelayTimeForPlayingFlippingAnim\n\t\t\t)\n\t\telse\n\t\t\tsetTimeout(\n\t\t\t\t() => setCards(cards.map(c => (c.locked ? c : { ...c, revealed: false }))),\n\t\t\t\tdelayTimeForPlayingFlippingAnim\n\t\t\t)\n\t}, [cards, setCards])\n\n\tconst flipCardById = (id: FlipCardType['id']) => {\n\t\tconst flipCardIfIdMatch = (c: FlipCardType) => (c.id === id ? { ...c, revealed: true } : c)\n\t\tconst changedCards = cards.map(flipCardIfIdMatch)\n\t\tsetCards(changedCards)\n\t}\n\n\tconst revealedCardNames = useMemo(\n\t\t() => R.dropRepeats(cards.filter(R.prop('locked')).filter(R.prop('revealed')).map(R.prop('name')).sort()),\n\t\t[cards]\n\t)\n\n\tconst completed = useMemo(() => cards.every(c => c.locked), [cards])\n\n\treturn { cards, flipCardById, revealedCardNames, completed }\n}\n","import * as R from 'ramda'\n\nexport const shuffleArray = <T = unknown>(array: T[]) => {\n  const sorted = R.sortBy(R.prop('order'))(array.map(x => ({ ...x, order: Math.random() })))\n  return sorted.map(R.omit(['order']))\n}","import BgContainer from 'component/bg-container'\nimport React, { useEffect } from 'react'\nimport { Images } from 'utils/cdn-resource'\nimport GameCompletionDialog from './completion-dialog'\nimport GameHeader from './page-header'\nimport GameMain from './page-main'\nimport { useFlipCardGame } from './hooks/flip-card'\nimport { useBoolState } from './hooks/use-bool'\n\nexport const SUNNY_HOME = 'sunnyHome'\nexport const CHILD = 'child'\nexport const TOGETHER = 'together'\nexport const BROOM = 'broom'\n\nconst gameSetting = [\n\t{ name: SUNNY_HOME, content: Images.sunnyHome },\n\t{ name: CHILD, content: Images.child },\n\t{ name: TOGETHER, content: Images.together },\n\t{ name: BROOM, content: Images.broom }\n]\n\nexport type GamePageProps = {}\nconst GamePage = (p: GamePageProps) => {\n\tconst { cards, flipCardById, revealedCardNames, completed } = useFlipCardGame(gameSetting)\n\tconst [completionDialogState, openCompletionDialog] = useBoolState(false)\n\n\tuseEffect(() => {\n\t\tif (completed) {\n\t\t\topenCompletionDialog()\n\t\t}\n\t}, [completed, openCompletionDialog])\n\n\treturn (\n\t\t<div>\n\t\t\t<BgContainer\n\t\t\t\theader={<GameHeader revealedCardNames={revealedCardNames} />}\n\t\t\t\tmain={<GameMain cards={cards} onCardClick={c => flipCardById(c.id)} />}\n\t\t\t/>\n\t\t\t<GameCompletionDialog open={completionDialogState} />\n\t\t</div>\n\t)\n}\nexport default GamePage\n","import { useState } from 'react'\n\ntype HookReturnType = [boolean, () => void, () => void]\nexport const useBoolState = (init: boolean | (() => boolean)): HookReturnType => {\n\tconst [s, setS] = useState(init)\n\treturn [s, () => setS(true), () => setS(false)]\n}\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\n\nconst header: CSSProperties = { height: '16vh', paddingTop: '6vh' }\nconst card: CSSProperties = {\n\theight: '57vh',\n\twidth: '76vw',\n\tborderRadius: '20px'\n}\nconst button: CSSProperties = {\n\tbackgroundColor: 'white',\n\tborderRadius: '1000px',\n\twidth: '76vw',\n\theight: '6vh'\n}\nconst buttonFont: CSSProperties = {\n\tfontWeight: 'bold'\n}\n\nexport const useStyles = makeStyles({ header, card, button, buttonFont })\n","import { Box, Button, Card, Typography } from '@material-ui/core'\nimport { GAME_PAGE } from 'App'\nimport BgContainer from 'component/bg-container'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport GameTitle from 'view/game-title'\nimport { useStyles } from './index.style'\n\nexport type LandingPageProps = {}\nconst LandingPage = (p: LandingPageProps) => {\n\tconst styles = useStyles()\n\tconst history = useHistory()\n\t/* -------------------------------------------------------------------------- */\n\t/*                                event handler                               */\n\t/* -------------------------------------------------------------------------- */\n\tconst onStartGameButtonClick = () => {\n\t\thistory.push(GAME_PAGE)\n\t}\n\treturn (\n\t\t<BgContainer\n\t\t\theader={\n\t\t\t\t<>\n\t\t\t\t\t<GameTitle />\n\t\t\t\t\t<Typography variant='body2' align='center' color='textSecondary'>\n\t\t\t\t\t\t翻开卡牌，寻找故事碎片\n\t\t\t\t\t</Typography>\n\t\t\t\t</>\n\t\t\t}\n\t\t\tmain={\n\t\t\t\t<>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t<Card className={styles.card}></Card>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</section>\n\t\t\t\t\t<Box margin={6} />\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t<Button className={styles.button} variant='contained' onClick={onStartGameButtonClick}>\n\t\t\t\t\t\t\t\t<Typography className={styles.buttonFont} variant='body2' align='center' color='textPrimary'>\n\t\t\t\t\t\t\t\t\t开始游戏\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</section>\n\t\t\t\t</>\n\t\t\t}\n\t\t/>\n\t)\n}\nexport default LandingPage\n","import { Box, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport type StoryTitleProps = {};\nconst StoryTitle = (p: StoryTitleProps) => {\n  return (\n    <div>\n      <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\">\n        故事详情\n      </Typography>\n      <Box margin={2} />\n    </div>\n  );\n};\nexport default StoryTitle;\n","import { Box, BoxProps } from '@material-ui/core'\nimport React from 'react'\n\nexport type CenterBoxProps = {\n\tchildren: JSX.Element\n} & BoxProps\n\nconst CenterBox = (p: CenterBoxProps) => {\n\treturn (\n\t\t<Box display='flex' justifyContent='center' alignItems='center' {...p}>\n\t\t\t{p.children}\n\t\t</Box>\n\t)\n}\nexport default CenterBox\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\nimport { linearGradient } from 'theme/style-utils'\n\nconst storyCard: CSSProperties = {\n\twidth: '86vw',\n\theight: '70vh',\n\tborderRadius: '16px',\n\tmarginBottom: '40px',\n\tbackground: linearGradient(['rgb(255,255,255,0.55)', 'rgb(255,255,255)']),\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\tjustifyContent: 'space-between',\n\talignItems: 'center'\n}\n\nconst iconContainer: CSSProperties = {\n\theight: '50px',\n\twidth: '50px',\n\tborderRadius: '50%',\n\tbackgroundColor: 'rgb(252, 227, 227)',\n\tborder: '2px white solid'\n}\n\nconst storyCardBottom: CSSProperties = {\n\theight: '40px',\n\twidth: '100%',\n\tbackgroundColor: 'rgb(252, 227, 227)'\n}\n\nexport const useStyles = makeStyles({ storyCard, iconContainer, storyCardBottom })\n","import { Box, Card, Typography } from '@material-ui/core'\nimport CenterBox from 'component/center-box'\nimport { Icon, IconProps } from 'component/icons'\nimport React from 'react'\nimport { useStyles } from './story-card.style'\n\nexport type StoryCardProps = {\n\ticonImg: IconProps['imgPath']\n\ttitle: string\n\tmainImg: string\n\tbottomImg: string\n}\nconst StoryCard = (p: StoryCardProps) => {\n\tconst styles = useStyles()\n\treturn (\n\t\t<CenterBox>\n\t\t\t<Card className={styles.storyCard}>\n\t\t\t\t<CenterBox mt={4} mb={2} className={styles.iconContainer}>\n\t\t\t\t\t<Icon imgPath={p.iconImg} />\n\t\t\t\t</CenterBox>\n\t\t\t\t<Typography align='center' variant='h5'>\n\t\t\t\t\t{p.title}\n\t\t\t\t</Typography>\n\t\t\t\t<Box>\n\t\t\t\t\t<img src={p.mainImg} alt='a story' />\n\t\t\t\t\t<Typography variant='body1'>{p.title}</Typography>\n\t\t\t\t\t<Box className={styles.storyCardBottom}>\n\t\t\t\t\t\t<img src={p.bottomImg} alt='background' />\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</Card>\n\t\t</CenterBox>\n\t)\n}\nexport default StoryCard\n","import React from 'react'\nimport Carousel from 'react-material-ui-carousel'\nimport { Images } from 'utils/cdn-resource'\nimport StoryCard, { StoryCardProps } from './story-card'\n\nexport type StoryPageMainProps = {}\nconst storyCardSetting: StoryCardProps[] = [\n\t{ iconImg: Images.iconChild, title: '这辈子就这样了...', mainImg: '', bottomImg: Images.pieceChild },\n\t{ iconImg: Images.iconSunnyHome, title: '这辈子就这样了...', mainImg: '', bottomImg: Images.child },\n\t{ iconImg: Images.iconSunnyHome, title: '这辈子就这样了...', mainImg: '', bottomImg: Images.child },\n\t{ iconImg: Images.iconBroom, title: '这辈子就这样了...', mainImg: '', bottomImg: Images.child }\n]\nconst StoryPageMain = (p: StoryPageMainProps) => {\n\treturn (\n\t\t<div>\n\t\t\t<Carousel autoPlay={false}>\n\t\t\t\t{storyCardSetting.map((s, i) => (\n\t\t\t\t\t<StoryCard key={i} {...s} />\n\t\t\t\t))}\n\t\t\t</Carousel>\n\t\t</div>\n\t)\n}\nexport default StoryPageMain\n","import BgContainer from 'component/bg-container'\nimport React from 'react'\nimport StoryTitle from 'view/story-title'\nimport StoryPageMain from './page-main'\n\nexport type StoryPageProps = {}\nconst StoryPage = (p: StoryPageProps) => {\n\treturn (\n\t\t<BgContainer\n\t\t\tstyleOptions={{\n\t\t\t\theaderHeight: '10vh'\n\t\t\t}}\n\t\t\theader={<StoryTitle />}\n\t\t\tmain={<StoryPageMain />}\n\t\t/>\n\t)\n}\n\nexport default StoryPage\n","import { createMuiTheme } from '@material-ui/core'\n\nexport const theme = createMuiTheme({\n\tpalette: {\n\t\ttext: {\n\t\t\tprimary: 'rgb(82, 49, 101)',\n\t\t\tsecondary: 'rgb(255, 255, 255)'\n\t\t}\n\t}\n})\n","import { ThemeProvider } from '@material-ui/core'\nimport GamePage from 'page/game-page'\nimport LandingPage from 'page/landing-page'\nimport StoryPage from 'page/story-page'\nimport React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { theme } from 'theme/theme'\n\nexport const LANDING_PAGE = '/'\nexport const GAME_PAGE = '/game'\nexport const STORY_PAGE = '/story'\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<Route path={LANDING_PAGE} exact>\n\t\t\t\t\t\t<LandingPage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={GAME_PAGE}>\n\t\t\t\t\t\t<GamePage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={STORY_PAGE}>\n\t\t\t\t\t\t<StoryPage />\n\t\t\t\t\t</Route>\n\t\t\t\t</BrowserRouter>\n\t\t\t</ThemeProvider>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}