{"version":3,"sources":["component/flip-card/bg.png","page/game-page/img/sunny-home.svg","page/game-page/img/child.svg","page/game-page/img/together.svg","page/game-page/img/broom.svg","component/bg-container/index.style.tsx","component/bg-container/index.tsx","component/flip-card/index.style.ts","component/flip-card/index.tsx","component/icons/index.tsx","component/question-answer/index.style.ts","component/question-answer/index.tsx","view/game-title/index.tsx","page/game-page/hooks/flip-card.ts","utils/randomizer.ts","page/game-page/index.tsx","page/game-page/hooks/timer.ts","page/langding-page/index.style.ts","page/langding-page/index.tsx","style/theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","colors","container","height","background","join","useStyles","makeStyles","header","paddingTop","BgContainer","p","styles","className","main","url","img","card","width","border","borderColor","amber","borderRadius","transition","backgroundImage","frontSideImg","backgroundSize","cardWidth","cardRevealed","transform","bgImg","FlipCard","role","revealed","Icon","useState","icon","setIcon","initIcon","useCallback","a","importer","default","useEffect","style","src","alt","IconBroom","IconChild","IconSunnyHome","IconTogether","iconSize","question","color","answer","backgroundColor","QuestionAnswer","Box","display","justifyContent","alignItems","GameTitle","Typography","variant","align","margin","useFlipCardGame","hookParams","array","initCards","concat","map","index","id","content","locked","R","x","order","Math","random","cards","setCards","revealedCards","filter","length","cardsContent","eq","setTimeout","c","flipCardById","changedCards","hideAll","DottedLine","letterSpacing","GameMain","CardImgSunnyHome","CardImgChild","CardImgTogether","CardImgBroom","hideAllCallback","leftTime","totalTime","setLeftTime","interval","setInterval","console","log","clearInterval","useCountdown","Container","onCardClick","renderRow","flexDirection","m","onClick","key","renderCards","args","GamePage","path","button","buttonFont","fontWeight","LandingPage","history","useHistory","exact","Card","Button","push","theme","createMuiTheme","palette","text","primary","secondary","App","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5d907085.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg.91eb1ea8.png\";","module.exports = __webpack_public_path__ + \"static/media/sunny-home.4b4e5d90.svg\";","module.exports = __webpack_public_path__ + \"static/media/child.bbb51395.svg\";","module.exports = __webpack_public_path__ + \"static/media/together.f046687e.svg\";","module.exports = __webpack_public_path__ + \"static/media/broom.4618afe6.svg\";","import { makeStyles } from \"@material-ui/core\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\n\nconst linearGradient = (colors: string[]) =>\n  `linear-gradient(${colors.join(\",\")})`;\n\nconst header: CSSProperties = { height: \"16vh\", paddingTop: \"6vh\" };\nconst container: CSSProperties = {\n  height: \"100vh\",\n  background: linearGradient([\n    \"rgb(221, 164, 146)\",\n    \"rgb(82, 49, 101)\",\n    \"rgb(24, 201, 227)\",\n  ]),\n};\n\nexport const useStyles = makeStyles({ container, header });\n","import React from \"react\";\nimport { useStyles } from \"./index.style\";\n\nexport type BgContainerProps = {\n  header: JSX.Element | JSX.Element[];\n  main: JSX.Element | JSX.Element[];\n};\nconst BgContainer = (p: BgContainerProps) => {\n  const styles = useStyles();\n  return (\n    <div className={styles.container}>\n      <header className={styles.header}>{p.header}</header>\n      <main>{p.main}</main>\n    </div>\n  );\n};\nexport default BgContainer;\n","import { colors, makeStyles } from \"@material-ui/core\";\nimport bgImg from \"./bg.png\";\n\nconst url = (img: string) => `url(${img})`;\n\nconst cardHeight = \"130px\";\nconst cardWidth = \"160px\";\nconst bgImgSize = cardWidth + \" \" + cardHeight;\n\ntype CardStyleProps = {\n  frontSideImg: string;\n};\n\nconst card = {\n  height: cardHeight,\n  width: cardWidth,\n  border: \"1px solid\",\n  borderColor: colors.amber[200],\n  borderRadius: \"12%\",\n  transition: \"all 0.2s ease-in\",\n  backgroundImage: (p: CardStyleProps) => url(p.frontSideImg),\n  backgroundSize: bgImgSize,\n};\n\nconst cardRevealed = {\n  ...card,\n  transform: \"rotateY(180deg)\",\n  backgroundSize: bgImgSize,\n  backgroundImage: url(bgImg),\n};\n\nexport const useStyles = makeStyles({\n  card,\n  cardRevealed,\n});\n","import React from \"react\";\nimport { useStyles } from \"./index.style\";\n\nexport type FlipCardProps = {\n  revealed: boolean;\n  frontSideImg: string;\n};\n\nconst FlipCard = (p: FlipCardProps) => {\n  const styles = useStyles({ frontSideImg: p.frontSideImg });\n  return (\n    <div\n      role=\"none\"\n      className={p.revealed ? styles.card : styles.cardRevealed}\n    />\n  );\n};\n\nexport default FlipCard;\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nexport type IconProps = {\n  importer: () => Promise<typeof import(\"*.svg\")>;\n};\nexport const Icon = (p: IconProps) => {\n  const [icon, setIcon] = useState(\"\");\n  const initIcon = useCallback(\n    async () => setIcon((await p.importer()).default),\n    [p]\n  );\n  useEffect(() => {\n    initIcon();\n  }, [initIcon]);\n  return (\n    <img\n      style={{\n        height: \"28pt\",\n        width: \"25pt\",\n      }}\n      src={icon}\n      alt=\"icon\"\n    ></img>\n  );\n};\n\nexport const IconBroom = () => (\n  <Icon importer={() => import(\"./iconBroom.svg\")} />\n);\nexport const IconChild = () => (\n  <Icon importer={() => import(\"./iconChild.svg\")} />\n);\nexport const IconSunnyHome = () => (\n  <Icon importer={() => import(\"./iconSunnyHome.svg\")} />\n);\nexport const IconTogether = () => (\n  <Icon importer={() => import(\"./iconTogether.svg\")} />\n);\n","import { makeStyles } from \"@material-ui/core\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\n\nconst iconSize = {\n  height: \"50px\",\n  width: \"50px\",\n  borderRadius: \"50%\",\n};\n\nconst question: CSSProperties = {\n  ...iconSize,\n  color: \"white\",\n};\nconst answer: CSSProperties = {\n  ...iconSize,\n  backgroundColor: \"rgb(252, 227, 227)\",\n  border: \"2px solid white\",\n};\nexport const useStyles = makeStyles({ question, answer });\n","import { Box } from \"@material-ui/core\";\nimport HelpTwoToneIcon from \"@material-ui/icons/HelpTwoTone\";\nimport React from \"react\";\nimport { useStyles } from \"./index.style\";\n\nexport type QuestionAnswerProps = {\n  revealed?: boolean;\n  answer: JSX.Element;\n};\nconst QuestionAnswer = (p: QuestionAnswerProps) => {\n  const styles = useStyles();\n  return (\n    <div>\n      {p.revealed ? (\n        <Box\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          className={styles.answer}\n        >\n          {p.answer}\n        </Box>\n      ) : (\n        <HelpTwoToneIcon className={styles.question} />\n      )}\n    </div>\n  );\n};\nexport default QuestionAnswer;\n","import { Box, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport type GameTitleProps = {};\nconst GameTitle = (p: GameTitleProps) => {\n  return (\n    <div>\n      <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\">\n        记忆考验\n      </Typography>\n      <Box margin={2} />\n    </div>\n  );\n};\nexport default GameTitle;\n","import * as R from \"ramda\";\nimport { useEffect, useState } from \"react\";\nimport { shuffleArray } from \"utils/randomizer\";\n\nexport type Card = {\n  id: number;\n  content: string;\n  revealed: boolean;\n  locked: boolean;\n};\n\nconst delayTimeForPlayingFlippingAnim = 400;\n\nexport const useFlipCardGame = (hookParams: Pick<Card, \"content\">[]) => {\n  const initCards = hookParams.concat(hookParams).map((p, index) => ({\n    id: index,\n    content: p.content,\n    revealed: true,\n    locked: false,\n  }));\n\n  const [cards, setCards] = useState<Card[]>(shuffleArray(initCards));\n\n  /** when there are 2 cards being revealed, the content of them will be checked */\n  /** 1. same content -> keep them revealed & mark them locked (locked means not operable any more) */\n  /** 2. different content -> hide them */\n  useEffect(() => {\n    const revealedCards = cards\n      .filter(R.compose(R.not, R.prop(\"locked\")))\n      .filter(R.prop(\"revealed\"));\n    if (revealedCards.length !== 2) return;\n    const cardsContent = revealedCards.map(R.prop(\"content\"));\n    const eq = R.equals(cardsContent[0]);\n    const areSameCards = R.all(eq)(cardsContent);\n    if (areSameCards)\n      setTimeout(\n        () =>\n          setCards(cards.map((c) => (c.revealed ? { ...c, locked: true } : c))),\n        delayTimeForPlayingFlippingAnim\n      );\n    else\n      setTimeout(\n        () =>\n          setCards(\n            cards.map((c) => (c.locked ? c : { ...c, revealed: false }))\n          ),\n        delayTimeForPlayingFlippingAnim\n      );\n  }, [cards, setCards]);\n\n  const hideAll = () => {\n    setCards(cards.map((c) => ({ ...c, revealed: false })));\n  };\n\n  const flipCardById = (id: Card[\"id\"]) => {\n    const flipCardIfIdMatch = (c: Card) =>\n      c.id === id ? { ...c, revealed: true } : c;\n    const changedCards = cards.map(flipCardIfIdMatch);\n    setCards(changedCards);\n  };\n\n  return { cards, flipCardById, hideAll };\n};\n","import * as R from 'ramda'\n\nexport const shuffleArray = <T = unknown>(array: T[]) => {\n  const sorted = R.sortBy(R.prop('order'))(array.map(x => ({ ...x, order: Math.random() })))\n  return sorted.map(R.omit(['order']))\n}","import * as R from \"ramda\";\nimport { Box, Container } from \"@material-ui/core\";\nimport BgContainer from \"component/bg-container\";\nimport FlipCard from \"component/flip-card\";\nimport {\n  IconBroom,\n  IconChild,\n  IconSunnyHome,\n  IconTogether,\n} from \"component/icons\";\nimport QuestionAnswer from \"component/question-answer\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport GameTitle from \"view/game-title\";\nimport { Card, useFlipCardGame } from \"./hooks/flip-card\";\nimport { useCountdown } from \"./hooks/timer\";\n\n/** images */\nimport CardImgSunnyHome from \"./img/sunny-home.svg\";\nimport CardImgChild from \"./img/child.svg\";\nimport CardImgTogether from \"./img/together.svg\";\nimport CardImgBroom from \"./img/broom.svg\";\n\nconst DottedLine = () => {\n  return (\n    <Box color=\"white\" letterSpacing={2}>\n      .....\n    </Box>\n  );\n};\n\nconst renderCards = (cards: Card[], onCardClick: (p: Card) => any) => {\n  const renderRow = (cards: Card[]) => (\n    <Box display=\"flex\" flexDirection=\"row\">\n      {cards.map((c) => (\n        <Box m={1} onClick={() => onCardClick(c)} key={c.id}>\n          <FlipCard revealed={c.revealed} frontSideImg={c.content} />\n        </Box>\n      ))}\n    </Box>\n  );\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n      {renderRow(R.slice(0, 2, cards))}\n      {renderRow(R.slice(2, 4, cards))}\n      {renderRow(R.slice(4, 6, cards))}\n      {renderRow(R.slice(6, 8, cards))}\n    </Box>\n  );\n};\nconst GameMain = () => {\n  const { cards, flipCardById, hideAll } = useFlipCardGame([\n    { content: CardImgSunnyHome },\n    { content: CardImgChild },\n    { content: CardImgTogether },\n    { content: CardImgBroom },\n  ]);\n\n  const hideAllCallback = useCallback(hideAll, []);\n\n  const onCardClick: Parameters<typeof renderCards>[1] = (args) => {\n    flipCardById(args.id);\n  };\n\n  const { leftTime } = useCountdown(3);\n\n  useEffect(() => {\n    if (leftTime === 0) hideAllCallback();\n  }, [leftTime, hideAllCallback]);\n\n  return <Container>{renderCards(cards, onCardClick)}</Container>;\n};\n\nexport type GamePageProps = {};\nconst GamePage = (p: GamePageProps) => {\n  return (\n    <Route path=\"/game\">\n      <BgContainer\n        header={\n          <>\n            <GameTitle />\n            <Container>\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                alignItems=\"center\"\n                justifyContent=\"space-evenly\"\n                width=\"90vw\"\n              >\n                <QuestionAnswer revealed answer={<IconChild />} />\n                <DottedLine />\n                <QuestionAnswer revealed answer={<IconSunnyHome />} />\n                <DottedLine />\n                <QuestionAnswer revealed answer={<IconTogether />} />\n                <DottedLine />\n                <QuestionAnswer revealed answer={<IconBroom />} />\n              </Box>\n            </Container>\n          </>\n        }\n        main={\n          <Box>\n            <GameMain />\n          </Box>\n        }\n      />\n    </Route>\n  );\n};\nexport default GamePage;\n","import { useEffect, useState } from \"react\";\n\n/**\n *\n * @param totalTime second as unit\n */\nexport const useCountdown = (totalTime: number) => {\n  const [leftTime, setLeftTime] = useState(totalTime);\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (leftTime > 0) {\n        setLeftTime(leftTime - 1);\n        console.log(\"time minus\");\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [leftTime]);\n\n  return { leftTime };\n};\n","import { makeStyles } from \"@material-ui/core\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\n\nconst header: CSSProperties = { height: \"16vh\", paddingTop: \"6vh\" };\nconst card: CSSProperties = {\n  height: \"57vh\",\n  width: \"76vw\",\n  borderRadius: \"20px\",\n};\nconst button: CSSProperties = {\n  backgroundColor: \"white\",\n  borderRadius: \"1000px\",\n  width: \"76vw\",\n  height: \"6vh\",\n};\nconst buttonFont: CSSProperties = {\n  fontWeight: \"bold\",\n};\n\nexport const useStyles = makeStyles({ header, card, button, buttonFont });\n","import { Box, Button, Card, Typography } from \"@material-ui/core\";\nimport BgContainer from \"component/bg-container\";\nimport React from \"react\";\nimport { Route, useHistory } from \"react-router-dom\";\nimport GameTitle from \"view/game-title\";\nimport { useStyles } from \"./index.style\";\n\nexport type LandingPageProps = {};\nconst LandingPage = (p: LandingPageProps) => {\n  const styles = useStyles();\n  const history = useHistory();\n  /* -------------------------------------------------------------------------- */\n  /*                                event handler                               */\n  /* -------------------------------------------------------------------------- */\n  const onStartGameButtonClick = () => {\n    history.push(\"/game\");\n  };\n  return (\n    <Route path=\"/\" exact>\n      <BgContainer\n        header={\n          <>\n            <GameTitle />\n            <Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n              翻开卡牌，寻找故事碎片\n            </Typography>\n          </>\n        }\n        main={\n          <>\n            <section>\n              <Box display=\"flex\" justifyContent=\"center\">\n                <Card className={styles.card}></Card>\n              </Box>\n            </section>\n            <Box margin={6} />\n            <section>\n              <Box display=\"flex\" justifyContent=\"center\">\n                <Button\n                  className={styles.button}\n                  variant=\"contained\"\n                  onClick={onStartGameButtonClick}\n                >\n                  <Typography\n                    className={styles.buttonFont}\n                    variant=\"body2\"\n                    align=\"center\"\n                    color=\"textPrimary\"\n                  >\n                    开始游戏\n                  </Typography>\n                </Button>\n              </Box>\n            </section>\n          </>\n        }\n      />\n    </Route>\n  );\n};\nexport default LandingPage;\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    text: {\n      primary: \"rgb(82, 49, 101)\",\n      secondary: \"rgb(255, 255, 255)\",\n    },\n  },\n});\n","import { ThemeProvider } from \"@material-ui/core\";\nimport GamePage from \"page/game-page\";\nimport LandingPage from \"page/langding-page\";\nimport React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { theme } from \"style/theme\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <LandingPage />\n          <GamePage />\n        </BrowserRouter>\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}