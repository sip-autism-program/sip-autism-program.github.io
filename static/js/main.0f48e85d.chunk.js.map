{"version":3,"sources":["page/game-page/img/gift.svg","component/flip-card/bg.png","page/game-page/img/broom.svg","page/game-page/img/child.svg","page/game-page/img/sunny-home.svg","page/game-page/img/together.svg","component/bg-container/index.style.tsx","component/bg-container/index.tsx","component/anim/index.tsx","page/game-page/completion-dialog.tsx","component/icons/index.tsx","component/question-answer/index.style.ts","component/question-answer/index.tsx","view/game-title/index.tsx","page/game-page/game-page-header.tsx","component/flip-card/index.style.ts","component/flip-card/index.tsx","page/game-page/game-page-main.tsx","page/game-page/hooks/flip-card.ts","utils/randomizer.ts","page/game-page/index.tsx","page/game-page/hooks/use-bool.ts","page/landing-page/index.style.ts","page/landing-page/index.tsx","style/theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","colors","container","height","background","join","useStyles","makeStyles","header","paddingTop","BgContainer","p","styles","className","main","Anim","type","repeat","style","animationDuration","duration","animationDelay","delay","children","Gift","history","useHistory","Box","onClick","push","STORY_PAGE","bgcolor","borderRadius","width","display","justifyContent","src","GiftImg","alt","GameCompletionDialog","Dialog","open","alignItems","Typography","align","variant","mb","Icon","useState","icon","setIcon","initIcon","useCallback","a","importer","default","useEffect","IconBroom","IconChild","IconSunnyHome","IconTogether","iconSize","question","color","answer","backgroundColor","QuestionAnswer","revealed","GameTitle","margin","DottedLine","letterSpacing","GameHeader","Container","flexDirection","revealedCardNames","includes","CHILD","SUNNY_HOME","TOGETHER","BROOM","url","img","card","border","borderColor","amber","transition","backgroundImage","frontSideImg","backgroundSize","cardWidth","cardRevealed","transform","bgImg","FlipCard","role","GameMain","renderRow","cards","map","c","m","onCardClick","key","id","content","R","useFlipCardGame","hookParams","array","initCards","concat","index","name","locked","x","order","Math","random","setCards","revealedCards","filter","length","cardsContent","eq","setTimeout","useMemo","sort","completed","every","flipCardById","changedCards","gameSetting","CardImgSunnyHome","CardImgChild","CardImgTogether","CardImgBroom","GamePage","init","s","setS","useBoolState","completionDialogState","openCompletionDialog","button","buttonFont","fontWeight","LandingPage","Card","Button","GAME_PAGE","theme","createMuiTheme","palette","text","primary","secondary","App","ThemeProvider","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2GAAAA,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,gC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,wC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,wGCGnBC,E,oEAIlBC,EAA2B,CAC/BC,OAAQ,QACRC,YANsBH,EAMK,CACzB,qBACA,mBACA,qBATmB,0BACFA,EAAOI,KAAK,KADV,OAaVC,EAAYC,YAAW,CAAEL,YAAWM,OAVnB,CAAEL,OAAQ,OAAQM,WAAY,SCU7CC,EATK,SAACC,GACnB,IAAMC,EAASN,IACf,OACE,yBAAKO,UAAWD,EAAOV,WACrB,4BAAQW,UAAWD,EAAOJ,QAASG,EAAEH,QACrC,8BAAOG,EAAEG,Q,2BCkBAC,EAlBF,SAACJ,GACb,OACC,yBACCE,UAAS,wDAEOF,EAAEK,KAFT,qBAGFL,EAAEM,OAAS,8BAA+B,GAHxC,YAKTC,MAAO,CACNC,kBAAkB,GAAD,OAAKR,EAAES,UAAY,EAAnB,KACjBC,eAAe,GAAD,OAAKV,EAAEW,OAAS,EAAhB,OAGdX,EAAEY,W,yBCjBAC,EAAO,WACZ,IAAMC,EAAUC,cAKhB,OACC,kBAAC,EAAD,CAAMV,KAAK,SAASC,QAAM,GACzB,kBAACU,EAAA,EAAD,CACCC,QAPiB,WACnBH,EAAQI,KAAKC,KAOXC,QAAQ,qBACRC,aAAa,MACb7B,OAAO,OACP8B,MAAM,OACNC,QAAQ,OACRC,eAAe,UAEf,yBAAKC,IAAKC,IAASC,IAAI,YAyBZC,EAlBc,SAAC5B,GAC7B,OACC,kBAAC6B,EAAA,EAAD,CAAQC,KAAM9B,EAAE8B,MACf,kBAACd,EAAA,EAAD,CAAKM,MAAM,OAAO9B,OAAO,OAAOQ,EAAG,GAClC,kBAACgB,EAAA,EAAD,CAAKxB,OAAO,OAAO+B,QAAQ,OAAOC,eAAe,SAASO,WAAW,UACpE,kBAAC,EAAD,OAED,kBAACC,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,MAAnC,wCAGA,kBAAClB,EAAA,EAAD,CAAKmB,GAAI,IACT,kBAACH,EAAA,EAAD,CAAYC,MAAM,SAASC,QAAQ,SAAnC,uG,mCCtCSE,EAAO,SAACpC,GAAkB,IAAD,EACZqC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,KAE9BC,EAAWC,sBAAW,sBAC1B,sBAAAC,EAAA,kEAAYH,EAAZ,SAA2BvC,EAAE2C,WAA7B,0BAAyCC,QAAzC,6EACA,CAAC5C,IAKH,OAHA6C,qBAAU,WACRL,MACC,CAACA,IAEF,yBACEjC,MAAO,CACLf,OAAQ,OACR8B,MAAO,QAETG,IAAKa,EACLX,IAAI,UAKGmB,EAAY,kBACvB,kBAAC,EAAD,CAAMH,SAAU,kBAAM,sCAEXI,EAAY,kBACvB,kBAAC,EAAD,CAAMJ,SAAU,kBAAM,sCAEXK,EAAgB,kBAC3B,kBAAC,EAAD,CAAML,SAAU,kBAAM,sCAEXM,EAAe,kBAC1B,kBAAC,EAAD,CAAMN,SAAU,kBAAM,sC,0BCjClBO,EAAW,CAChB1D,OAAQ,OACR8B,MAAO,OACPD,aAAc,OAGT8B,EAAuB,eACzBD,EADyB,CAE5BE,MAAO,UAEFC,EAAqB,eACvBH,EADuB,CAE1BI,gBAAiB,uBAEL3D,EAAYC,YAAW,CAAEuD,WAAUE,WCKjCE,EAZQ,SAACvD,GACvB,IAAMC,EAASN,IACf,OAAOK,EAAEwD,SACR,kBAAC,EAAD,CAAMnD,KAAK,YACV,kBAACW,EAAA,EAAD,CAAKO,QAAQ,OAAOC,eAAe,SAASO,WAAW,SAAS7B,UAAWD,EAAOoD,QAChFrD,EAAEqD,SAIL,kBAAC,IAAD,CAAiBnD,UAAWD,EAAOkD,YCLtBM,EAVG,SAACzD,GACjB,OACE,6BACE,kBAACgC,EAAA,EAAD,CAAYE,QAAQ,KAAKD,MAAM,SAASmB,MAAM,iBAA9C,4BAGA,kBAACpC,EAAA,EAAD,CAAK0C,OAAQ,MCHbC,EAAa,WAClB,OACC,kBAAC3C,EAAA,EAAD,CAAKoC,MAAM,QAAQQ,cAAe,GAAlC,UA2BaC,EAlBI,SAAC7D,GACnB,OACC,oCACC,kBAAC,EAAD,MACA,kBAAC8D,EAAA,EAAD,KACC,kBAAC9C,EAAA,EAAD,CAAKO,QAAQ,OAAOwC,cAAc,MAAMhC,WAAW,SAASP,eAAe,gBAAgBF,MAAM,QAChG,kBAAC,EAAD,CAAgBkC,SAAUxD,EAAEgE,kBAAkBC,SAASC,IAAQb,OAAQ,kBAAC,EAAD,QACvE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAgBG,SAAUxD,EAAEgE,kBAAkBC,SAASE,IAAad,OAAQ,kBAAC,EAAD,QAC5E,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAgBG,SAAUxD,EAAEgE,kBAAkBC,SAASG,IAAWf,OAAQ,kBAAC,EAAD,QAC1E,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAgBG,SAAUxD,EAAEgE,kBAAkBC,SAASI,IAAQhB,OAAQ,kBAAC,EAAD,Y,mCC3BtEiB,EAAM,SAACC,GAAD,oBAAwBA,EAAxB,MAUNC,EAAO,CACXhF,OATiB,QAUjB8B,MATgB,QAUhBmD,OAAQ,YACRC,YAAapF,IAAOqF,MAAM,KAC1BtD,aAAc,MACduD,WAAY,mBACZC,gBAAiB,SAAC7E,GAAD,OAAuBsE,EAAItE,EAAE8E,eAC9CC,eAdgBC,eAiBZC,EAAY,eACbT,EADa,CAEhBU,UAAW,kBACXH,eApBgBC,cAqBhBH,gBAAiBP,EAAIa,OAGVxF,EAAYC,YAAW,CAClC4E,OACAS,iBCfaG,EAVE,SAACpF,GAChB,IAAMC,EAASN,EAAU,CAAEmF,aAAc9E,EAAE8E,eAC3C,OACE,yBACEO,KAAK,OACLnF,UAAWF,EAAEwD,SAAWvD,EAAOuE,KAAOvE,EAAOgF,gBCmBpCK,EArBE,SAACtF,GACjB,IAAMuF,EAAY,SAACC,GAAD,OACjB,kBAACxE,EAAA,EAAD,CAAKO,QAAQ,OAAOwC,cAAc,OAChCyB,EAAMC,KAAI,SAAAC,GAAC,OACX,kBAAC1E,EAAA,EAAD,CAAK2E,EAAG,EAAG1E,QAAS,kBAAMjB,EAAE4F,YAAYF,IAAIG,IAAKH,EAAEI,IAClD,kBAAC,EAAD,CAAUtC,SAAUkC,EAAElC,SAAUsB,aAAcY,EAAEK,gBAKpD,OACC,kBAACjC,EAAA,EAAD,KACC,kBAAC9C,EAAA,EAAD,CAAKO,QAAQ,OAAOwC,cAAc,SAAShC,WAAW,UACpDwD,EAAUS,IAAQ,EAAG,EAAGhG,EAAEwF,QAC1BD,EAAUS,IAAQ,EAAG,EAAGhG,EAAEwF,QAC1BD,EAAUS,IAAQ,EAAG,EAAGhG,EAAEwF,QAC1BD,EAAUS,IAAQ,EAAG,EAAGhG,EAAEwF,W,8ECblBS,GAAkB,SAACC,GAC/B,ICbyCC,EDanCC,EAAYF,EAAWG,OAAOH,GAAYT,KAAI,SAACzF,EAAGsG,GAAJ,MAAe,CAClER,GAAIQ,EACJC,KAAMvG,EAAEuG,KACRR,QAAS/F,EAAE+F,QACXvC,UAAU,EACVgD,QAAQ,MAN+E,EAS9DnE,oBCrBe8D,EDqBuBC,ECpBhDJ,KAASA,KAAO,SAAhBA,CAA0BG,EAAMV,KAAI,SAAAgB,GAAC,sBAAUA,EAAV,CAAaC,MAAOC,KAAKC,eAC/DnB,IAAIO,KAAO,CAAC,aDU6D,mBASjFR,EATiF,KAS1EqB,EAT0E,KAcxFhE,qBAAU,WACT,IAAMiE,EAAgBtB,EAAMuB,OAAOf,IAAUA,KAAOA,KAAO,YAAYe,OAAOf,KAAO,aACrF,GAA6B,IAAzBc,EAAcE,OAAlB,CACA,IAAMC,EAAeH,EAAcrB,IAAIO,KAAO,YACxCkB,EAAKlB,KAASiB,EAAa,IACZjB,KAAMkB,EAANlB,CAAUiB,GAE9BE,YACC,kBAAMN,EAASrB,EAAMC,KAAI,SAAAC,GAAC,OAAKA,EAAElC,SAAF,eAAkBkC,EAAlB,CAAqBc,QAAQ,IAASd,QAxBjC,KA4BrCyB,YACC,kBAAMN,EAASrB,EAAMC,KAAI,SAAAC,GAAC,OAAKA,EAAEc,OAASd,EAAX,eAAoBA,EAApB,CAAuBlC,UAAU,UA7B5B,QAgCpC,CAACgC,EAAOqB,IAEX,IAMM7C,EAAoBoD,mBACzB,kBAAMpB,KAAcR,EAAMuB,OAAOf,KAAO,WAAWe,OAAOf,KAAO,aAAaP,IAAIO,KAAO,SAASqB,UAClG,CAAC7B,IAGI8B,EAAYF,mBAAQ,kBAAM5B,EAAM+B,OAAM,SAAA7B,GAAC,OAAIA,EAAEc,YAAS,CAAChB,IAE7D,MAAO,CAAEA,QAAOgC,aAbK,SAAC1B,GACrB,IACM2B,EAAejC,EAAMC,KADD,SAACC,GAAD,OAAsBA,EAAEI,KAAOA,EAAT,eAAmBJ,EAAnB,CAAsBlC,UAAU,IAASkC,KAEzFmB,EAASY,IAUoBzD,oBAAmBsD,c,oFE9CrCnD,GAAa,YACbD,GAAQ,QACRE,GAAW,WACXC,GAAQ,QAEfqD,GAAc,CACnB,CAAEnB,KAAMpC,GAAY4B,QAAS4B,MAC7B,CAAEpB,KAAMrC,GAAO6B,QAAS6B,MACxB,CAAErB,KAAMnC,GAAU2B,QAAS8B,MAC3B,CAAEtB,KAAMlC,GAAO0B,QAAS+B,OAwBVC,GApBE,SAAC/H,GAAsB,IAAD,EACwBiG,GAAgByB,IAAtElC,EAD8B,EAC9BA,MAAOgC,EADuB,EACvBA,aAAcxD,EADS,EACTA,kBAAmBsD,EADV,EACUA,UADV,ECvBX,SAACU,GAAqD,IAAD,EAC9D3F,mBAAS2F,GADqD,mBACzEC,EADyE,KACtEC,EADsE,KAEhF,MAAO,CAACD,EAAG,kBAAMC,GAAK,IAAO,kBAAMA,GAAK,KDuBcC,EAAa,GAF7B,mBAE/BC,EAF+B,KAERC,EAFQ,KAUtC,OANAxF,qBAAU,WACLyE,GACHe,MAEC,CAACf,EAAWe,IAGd,6BACC,kBAAC,EAAD,CACCxI,OAAQ,kBAAC,EAAD,CAAYmE,kBAAmBA,IACvC7D,KAAM,kBAAC,EAAD,CAAUqF,MAAOA,EAAOI,YAAa,SAAAF,GAAC,OAAI8B,EAAa9B,EAAEI,SAEhE,kBAAC,EAAD,CAAsBhE,KAAMsG,M,oBEvBlBzI,GAAYC,YAAW,CAAEC,OAhBR,CAAEL,OAAQ,OAAQM,WAAY,OAgBd0E,KAflB,CAC3BhF,OAAQ,OACR8B,MAAO,OACPD,aAAc,QAYqCiH,OAVtB,CAC7BhF,gBAAiB,QACjBjC,aAAc,SACdC,MAAO,OACP9B,OAAQ,OAMmD+I,WAJ1B,CACjCC,WAAY,UCkCEC,GAzCK,SAACzI,GACpB,IAAMC,EAASN,KACTmB,EAAUC,cAOhB,OACC,kBAAC,EAAD,CACClB,OACC,oCACC,kBAAC,EAAD,MACA,kBAACmC,EAAA,EAAD,CAAYE,QAAQ,QAAQD,MAAM,SAASmB,MAAM,iBAAjD,uEAKFjD,KACC,oCACC,iCACC,kBAACa,EAAA,EAAD,CAAKO,QAAQ,OAAOC,eAAe,UAClC,kBAACkH,GAAA,EAAD,CAAMxI,UAAWD,EAAOuE,SAG1B,kBAACxD,EAAA,EAAD,CAAK0C,OAAQ,IACb,iCACC,kBAAC1C,EAAA,EAAD,CAAKO,QAAQ,OAAOC,eAAe,UAClC,kBAACmH,GAAA,EAAD,CAAQzI,UAAWD,EAAOqI,OAAQpG,QAAQ,YAAYjB,QAvB7B,WAC9BH,EAAQI,KAAK0H,MAuBP,kBAAC5G,EAAA,EAAD,CAAY9B,UAAWD,EAAOsI,WAAYrG,QAAQ,QAAQD,MAAM,SAASmB,MAAM,eAA/E,mC,mBCrCKyF,GAAQC,aAAe,CAClCC,QAAS,CACPC,KAAM,CACJC,QAAS,mBACTC,UAAW,yBCEJN,GAAY,QACZzH,GAAa,SAmBXgI,OAjBf,WACC,OACC,yBAAKjJ,UAAU,OACd,kBAACkJ,EAAA,EAAD,CAAeP,MAAOA,IACrB,kBAAC,KAAD,KACC,kBAAC,IAAD,CAAOQ,KATgB,IASIC,OAAK,GAC/B,kBAAC,GAAD,OAED,kBAAC,IAAD,CAAOD,KAAMT,IACZ,kBAAC,GAAD,WCRcW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0f48e85d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gift.2b664c4c.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg.91eb1ea8.png\";","module.exports = __webpack_public_path__ + \"static/media/broom.4618afe6.svg\";","module.exports = __webpack_public_path__ + \"static/media/child.bbb51395.svg\";","module.exports = __webpack_public_path__ + \"static/media/sunny-home.4b4e5d90.svg\";","module.exports = __webpack_public_path__ + \"static/media/together.f046687e.svg\";","import { makeStyles } from \"@material-ui/core\";\nimport { CSSProperties } from \"@material-ui/core/styles/withStyles\";\n\nconst linearGradient = (colors: string[]) =>\n  `linear-gradient(${colors.join(\",\")})`;\n\nconst header: CSSProperties = { height: \"16vh\", paddingTop: \"6vh\" };\nconst container: CSSProperties = {\n  height: \"100vh\",\n  background: linearGradient([\n    \"rgb(221, 164, 146)\",\n    \"rgb(82, 49, 101)\",\n    \"rgb(24, 201, 227)\",\n  ]),\n};\n\nexport const useStyles = makeStyles({ container, header });\n","import React from \"react\";\nimport { useStyles } from \"./index.style\";\n\nexport type BgContainerProps = {\n  header: JSX.Element | JSX.Element[];\n  main: JSX.Element | JSX.Element[];\n};\nconst BgContainer = (p: BgContainerProps) => {\n  const styles = useStyles();\n  return (\n    <div className={styles.container}>\n      <header className={styles.header}>{p.header}</header>\n      <main>{p.main}</main>\n    </div>\n  );\n};\nexport default BgContainer;\n","import React from 'react'\n\nexport type AnimType = 'bounce' | 'bounceIn'\n\nexport type AnimProps = {\n\ttype: AnimType\n\tchildren: JSX.Element\n\tduration?: number\n\tdelay?: number\n\trepeat?: boolean\n}\n\nconst Anim = (p: AnimProps) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={`\n        animate__animated\n        animate__${p.type}\n        ${p.repeat ? 'animate__infinite\tinfinite' : ''}\n      `}\n\t\t\tstyle={{\n\t\t\t\tanimationDuration: `${p.duration || 1}s`,\n\t\t\t\tanimationDelay: `${p.delay || 0}s`\n\t\t\t}}\n\t\t>\n\t\t\t{p.children}\n\t\t</div>\n\t)\n}\n\nexport default Anim\n","import { Box, Dialog, DialogProps, Typography } from '@material-ui/core'\nimport { STORY_PAGE } from 'App'\nimport Anim from 'component/anim'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\n/** images */\nimport GiftImg from './img/gift.svg'\n\nconst Gift = () => {\n\tconst history = useHistory()\n\tconst onGiftClick = () => {\n\t\thistory.push(STORY_PAGE)\n\t}\n\n\treturn (\n\t\t<Anim type='bounce' repeat>\n\t\t\t<Box\n\t\t\t\tonClick={onGiftClick}\n\t\t\t\tbgcolor='rgb(252, 227, 227)'\n\t\t\t\tborderRadius='50%'\n\t\t\t\theight='80px'\n\t\t\t\twidth='80px'\n\t\t\t\tdisplay='flex'\n\t\t\t\tjustifyContent='center'\n\t\t\t>\n\t\t\t\t<img src={GiftImg} alt='gift' />\n\t\t\t</Box>\n\t\t</Anim>\n\t)\n}\n\nexport type GameCompletionDialogProps = {} & Pick<DialogProps, 'open'>\nconst GameCompletionDialog = (p: GameCompletionDialogProps) => {\n\treturn (\n\t\t<Dialog open={p.open}>\n\t\t\t<Box width='60vw' height='36vh' p={2}>\n\t\t\t\t<Box height='18vh' display='flex' justifyContent='center' alignItems='center'>\n\t\t\t\t\t<Gift />\n\t\t\t\t</Box>\n\t\t\t\t<Typography align='center' variant='h5'>\n\t\t\t\t\t解锁故事成功\n\t\t\t\t</Typography>\n\t\t\t\t<Box mb={1} />\n\t\t\t\t<Typography align='center' variant='body1'>\n\t\t\t\t\t恭喜完成挑战，符号的意义解锁中…\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t</Dialog>\n\t)\n}\nexport default GameCompletionDialog\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nexport type IconProps = {\n  importer: () => Promise<typeof import(\"*.svg\")>;\n};\nexport const Icon = (p: IconProps) => {\n  const [icon, setIcon] = useState(\"\");\n  const initIcon = useCallback(\n    async () => setIcon((await p.importer()).default),\n    [p]\n  );\n  useEffect(() => {\n    initIcon();\n  }, [initIcon]);\n  return (\n    <img\n      style={{\n        height: \"28pt\",\n        width: \"25pt\",\n      }}\n      src={icon}\n      alt=\"icon\"\n    ></img>\n  );\n};\n\nexport const IconBroom = () => (\n  <Icon importer={() => import(\"./iconBroom.svg\")} />\n);\nexport const IconChild = () => (\n  <Icon importer={() => import(\"./iconChild.svg\")} />\n);\nexport const IconSunnyHome = () => (\n  <Icon importer={() => import(\"./iconSunnyHome.svg\")} />\n);\nexport const IconTogether = () => (\n  <Icon importer={() => import(\"./iconTogether.svg\")} />\n);\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\n\nconst iconSize = {\n\theight: '50px',\n\twidth: '50px',\n\tborderRadius: '50%'\n}\n\nconst question: CSSProperties = {\n\t...iconSize,\n\tcolor: 'white'\n}\nconst answer: CSSProperties = {\n\t...iconSize,\n\tbackgroundColor: 'rgb(252, 227, 227)'\n}\nexport const useStyles = makeStyles({ question, answer })\n","import { Box } from '@material-ui/core'\nimport HelpTwoToneIcon from '@material-ui/icons/HelpTwoTone'\nimport Anim from 'component/anim'\nimport React from 'react'\nimport { useStyles } from './index.style'\n\nexport type QuestionAnswerProps = {\n\trevealed?: boolean\n\tanswer: JSX.Element\n}\nconst QuestionAnswer = (p: QuestionAnswerProps) => {\n\tconst styles = useStyles()\n\treturn p.revealed ? (\n\t\t<Anim type='bounceIn'>\n\t\t\t<Box display='flex' justifyContent='center' alignItems='center' className={styles.answer}>\n\t\t\t\t{p.answer}\n\t\t\t</Box>\n\t\t</Anim>\n\t) : (\n\t\t<HelpTwoToneIcon className={styles.question} />\n\t)\n}\nexport default QuestionAnswer\n","import { Box, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport type GameTitleProps = {};\nconst GameTitle = (p: GameTitleProps) => {\n  return (\n    <div>\n      <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\">\n        记忆考验\n      </Typography>\n      <Box margin={2} />\n    </div>\n  );\n};\nexport default GameTitle;\n","import { Container, Box } from '@material-ui/core'\nimport { IconChild, IconSunnyHome, IconTogether, IconBroom } from 'component/icons'\nimport QuestionAnswer from 'component/question-answer'\nimport React from 'react'\nimport GameTitle from 'view/game-title'\nimport { BROOM, CHILD, SUNNY_HOME, TOGETHER } from '.'\n\nconst DottedLine = () => {\n\treturn (\n\t\t<Box color='white' letterSpacing={2}>\n\t\t\t.....\n\t\t</Box>\n\t)\n}\n\nexport type GameTitleProps = {\n\trevealedCardNames: string[]\n}\nconst GameHeader = (p: GameTitleProps) => {\n\treturn (\n\t\t<>\n\t\t\t<GameTitle />\n\t\t\t<Container>\n\t\t\t\t<Box display='flex' flexDirection='row' alignItems='center' justifyContent='space-between' width='90vw'>\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(CHILD)} answer={<IconChild />} />\n\t\t\t\t\t<DottedLine />\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(SUNNY_HOME)} answer={<IconSunnyHome />} />\n\t\t\t\t\t<DottedLine />\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(TOGETHER)} answer={<IconTogether />} />\n\t\t\t\t\t<DottedLine />\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(BROOM)} answer={<IconBroom />} />\n\t\t\t\t</Box>\n\t\t\t</Container>\n\t\t</>\n\t)\n}\nexport default GameHeader\n","import { colors, makeStyles } from \"@material-ui/core\";\nimport bgImg from \"./bg.png\";\n\nconst url = (img: string) => `url(${img})`;\n\nconst cardHeight = \"130px\";\nconst cardWidth = \"160px\";\nconst bgImgSize = cardWidth + \" \" + cardHeight;\n\ntype CardStyleProps = {\n  frontSideImg: string;\n};\n\nconst card = {\n  height: cardHeight,\n  width: cardWidth,\n  border: \"1px solid\",\n  borderColor: colors.amber[200],\n  borderRadius: \"12%\",\n  transition: \"all 0.2s ease-in\",\n  backgroundImage: (p: CardStyleProps) => url(p.frontSideImg),\n  backgroundSize: bgImgSize,\n};\n\nconst cardRevealed = {\n  ...card,\n  transform: \"rotateY(180deg)\",\n  backgroundSize: bgImgSize,\n  backgroundImage: url(bgImg),\n};\n\nexport const useStyles = makeStyles({\n  card,\n  cardRevealed,\n});\n","import React from \"react\";\nimport { useStyles } from \"./index.style\";\n\nexport type FlipCardProps = {\n  revealed: boolean;\n  frontSideImg: string;\n};\n\nconst FlipCard = (p: FlipCardProps) => {\n  const styles = useStyles({ frontSideImg: p.frontSideImg });\n  return (\n    <div\n      role=\"none\"\n      className={p.revealed ? styles.card : styles.cardRevealed}\n    />\n  );\n};\n\nexport default FlipCard;\n","import * as R from 'ramda'\nimport { Box, Container } from '@material-ui/core'\nimport FlipCard from 'component/flip-card'\nimport React from 'react'\nimport { FlipCardType } from './hooks/flip-card'\n\nexport type GameMainProps = {\n\tcards: FlipCardType[]\n\tonCardClick: (p: FlipCardType) => any\n}\n\nconst GameMain = (p: GameMainProps) => {\n\tconst renderRow = (cards: FlipCardType[]) => (\n\t\t<Box display='flex' flexDirection='row'>\n\t\t\t{cards.map(c => (\n\t\t\t\t<Box m={1} onClick={() => p.onCardClick(c)} key={c.id}>\n\t\t\t\t\t<FlipCard revealed={c.revealed} frontSideImg={c.content} />\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t</Box>\n\t)\n\treturn (\n\t\t<Container>\n\t\t\t<Box display='flex' flexDirection='column' alignItems='center'>\n\t\t\t\t{renderRow(R.slice(0, 2, p.cards))}\n\t\t\t\t{renderRow(R.slice(2, 4, p.cards))}\n\t\t\t\t{renderRow(R.slice(4, 6, p.cards))}\n\t\t\t\t{renderRow(R.slice(6, 8, p.cards))}\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\nexport default GameMain\n","import * as R from 'ramda'\nimport { useEffect, useMemo, useState } from 'react'\nimport { shuffleArray } from 'utils/randomizer'\n\nexport type FlipCardType = {\n\tid: number\n\tname: string\n\tcontent: string\n\trevealed: boolean\n\tlocked: boolean\n}\n\nconst delayTimeForPlayingFlippingAnim = 400\n\nexport const useFlipCardGame = (hookParams: Pick<FlipCardType, 'content' | 'name'>[]) => {\n\tconst initCards = hookParams.concat(hookParams).map((p, index) => ({\n\t\tid: index,\n\t\tname: p.name,\n\t\tcontent: p.content,\n\t\trevealed: false,\n\t\tlocked: false\n\t}))\n\n\tconst [cards, setCards] = useState<FlipCardType[]>(shuffleArray(initCards))\n\n\t/** when there are 2 cards being revealed, the content of them will be checked */\n\t/** 1. same content -> keep them revealed & mark them locked (locked means not operable any more) */\n\t/** 2. different content -> hide them */\n\tuseEffect(() => {\n\t\tconst revealedCards = cards.filter(R.compose(R.not, R.prop('locked'))).filter(R.prop('revealed'))\n\t\tif (revealedCards.length !== 2) return\n\t\tconst cardsContent = revealedCards.map(R.prop('content'))\n\t\tconst eq = R.equals(cardsContent[0])\n\t\tconst areSameCards = R.all(eq)(cardsContent)\n\t\tif (areSameCards)\n\t\t\tsetTimeout(\n\t\t\t\t() => setCards(cards.map(c => (c.revealed ? { ...c, locked: true } : c))),\n\t\t\t\tdelayTimeForPlayingFlippingAnim\n\t\t\t)\n\t\telse\n\t\t\tsetTimeout(\n\t\t\t\t() => setCards(cards.map(c => (c.locked ? c : { ...c, revealed: false }))),\n\t\t\t\tdelayTimeForPlayingFlippingAnim\n\t\t\t)\n\t}, [cards, setCards])\n\n\tconst flipCardById = (id: FlipCardType['id']) => {\n\t\tconst flipCardIfIdMatch = (c: FlipCardType) => (c.id === id ? { ...c, revealed: true } : c)\n\t\tconst changedCards = cards.map(flipCardIfIdMatch)\n\t\tsetCards(changedCards)\n\t}\n\n\tconst revealedCardNames = useMemo(\n\t\t() => R.dropRepeats(cards.filter(R.prop('locked')).filter(R.prop('revealed')).map(R.prop('name')).sort()),\n\t\t[cards]\n\t)\n\n\tconst completed = useMemo(() => cards.every(c => c.locked), [cards])\n\n\treturn { cards, flipCardById, revealedCardNames, completed }\n}\n","import * as R from 'ramda'\n\nexport const shuffleArray = <T = unknown>(array: T[]) => {\n  const sorted = R.sortBy(R.prop('order'))(array.map(x => ({ ...x, order: Math.random() })))\n  return sorted.map(R.omit(['order']))\n}","import BgContainer from 'component/bg-container'\nimport React, { useEffect } from 'react'\nimport GameCompletionDialog from './completion-dialog'\nimport GameHeader from './game-page-header'\nimport GameMain from './game-page-main'\nimport { useFlipCardGame } from './hooks/flip-card'\nimport { useBoolState } from './hooks/use-bool'\n/** images */\nimport CardImgBroom from './img/broom.svg'\nimport CardImgChild from './img/child.svg'\nimport CardImgSunnyHome from './img/sunny-home.svg'\nimport CardImgTogether from './img/together.svg'\n\nexport const SUNNY_HOME = 'sunnyHome'\nexport const CHILD = 'child'\nexport const TOGETHER = 'together'\nexport const BROOM = 'broom'\n\nconst gameSetting = [\n\t{ name: SUNNY_HOME, content: CardImgSunnyHome },\n\t{ name: CHILD, content: CardImgChild },\n\t{ name: TOGETHER, content: CardImgTogether },\n\t{ name: BROOM, content: CardImgBroom }\n]\n\nexport type GamePageProps = {}\nconst GamePage = (p: GamePageProps) => {\n\tconst { cards, flipCardById, revealedCardNames, completed } = useFlipCardGame(gameSetting)\n\tconst [completionDialogState, openCompletionDialog] = useBoolState(false)\n\n\tuseEffect(() => {\n\t\tif (completed) {\n\t\t\topenCompletionDialog()\n\t\t}\n\t}, [completed, openCompletionDialog])\n\n\treturn (\n\t\t<div>\n\t\t\t<BgContainer\n\t\t\t\theader={<GameHeader revealedCardNames={revealedCardNames} />}\n\t\t\t\tmain={<GameMain cards={cards} onCardClick={c => flipCardById(c.id)} />}\n\t\t\t/>\n\t\t\t<GameCompletionDialog open={completionDialogState} />\n\t\t</div>\n\t)\n}\nexport default GamePage\n","import { useState } from 'react'\n\ntype HookReturnType = [boolean, () => void, () => void]\nexport const useBoolState = (init: boolean | (() => boolean)): HookReturnType => {\n\tconst [s, setS] = useState(init)\n\treturn [s, () => setS(true), () => setS(false)]\n}\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\n\nconst header: CSSProperties = { height: '16vh', paddingTop: '6vh' }\nconst card: CSSProperties = {\n\theight: '57vh',\n\twidth: '76vw',\n\tborderRadius: '20px'\n}\nconst button: CSSProperties = {\n\tbackgroundColor: 'white',\n\tborderRadius: '1000px',\n\twidth: '76vw',\n\theight: '6vh'\n}\nconst buttonFont: CSSProperties = {\n\tfontWeight: 'bold'\n}\n\nexport const useStyles = makeStyles({ header, card, button, buttonFont })\n","import { Box, Button, Card, Typography } from '@material-ui/core'\nimport { GAME_PAGE } from 'App'\nimport BgContainer from 'component/bg-container'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport GameTitle from 'view/game-title'\nimport { useStyles } from './index.style'\n\nexport type LandingPageProps = {}\nconst LandingPage = (p: LandingPageProps) => {\n\tconst styles = useStyles()\n\tconst history = useHistory()\n\t/* -------------------------------------------------------------------------- */\n\t/*                                event handler                               */\n\t/* -------------------------------------------------------------------------- */\n\tconst onStartGameButtonClick = () => {\n\t\thistory.push(GAME_PAGE)\n\t}\n\treturn (\n\t\t<BgContainer\n\t\t\theader={\n\t\t\t\t<>\n\t\t\t\t\t<GameTitle />\n\t\t\t\t\t<Typography variant='body2' align='center' color='textSecondary'>\n\t\t\t\t\t\t翻开卡牌，寻找故事碎片\n\t\t\t\t\t</Typography>\n\t\t\t\t</>\n\t\t\t}\n\t\t\tmain={\n\t\t\t\t<>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t<Card className={styles.card}></Card>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</section>\n\t\t\t\t\t<Box margin={6} />\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t<Button className={styles.button} variant='contained' onClick={onStartGameButtonClick}>\n\t\t\t\t\t\t\t\t<Typography className={styles.buttonFont} variant='body2' align='center' color='textPrimary'>\n\t\t\t\t\t\t\t\t\t开始游戏\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</section>\n\t\t\t\t</>\n\t\t\t}\n\t\t/>\n\t)\n}\nexport default LandingPage\n","import { createMuiTheme } from \"@material-ui/core\";\n\nexport const theme = createMuiTheme({\n  palette: {\n    text: {\n      primary: \"rgb(82, 49, 101)\",\n      secondary: \"rgb(255, 255, 255)\",\n    },\n  },\n});\n","import { ThemeProvider } from '@material-ui/core'\nimport GamePage from 'page/game-page'\nimport LandingPage from 'page/landing-page'\nimport React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { theme } from 'style/theme'\n\nexport const LANDING_PAGE = '/'\nexport const GAME_PAGE = '/game'\nexport const STORY_PAGE = '/story'\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<Route path={LANDING_PAGE} exact>\n\t\t\t\t\t\t<LandingPage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={GAME_PAGE}>\n\t\t\t\t\t\t<GamePage />\n\t\t\t\t\t</Route>\n\t\t\t\t</BrowserRouter>\n\t\t\t</ThemeProvider>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}