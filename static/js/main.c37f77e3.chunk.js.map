{"version":3,"sources":["theme/style-utils.ts","component/bg-container/index.style.tsx","component/bg-container/index.tsx","utils/cos-resource.ts","component/anim/index.tsx","page/game-page/completion-dialog.tsx","component/icons/index.tsx","component/question-answer/index.style.ts","component/question-answer/index.tsx","view/game-title/index.tsx","page/game-page/page-header.tsx","component/flip-card/index.style.ts","component/flip-card/index.tsx","page/game-page/page-main.tsx","page/game-page/hooks/flip-card.ts","utils/randomizer.ts","page/game-page/index.tsx","page/game-page/hooks/use-bool.ts","component/button/index.style.ts","component/button/index.tsx","page/landing-page/index.style.ts","page/landing-page/index.tsx","view/story-title/index.tsx","component/center-box/index.tsx","page/story-page/card-container.style.ts","page/story-page/card-container.tsx","page/story-page/propaganda-card.tsx","page/story-page/story-card.style.ts","page/story-page/story-card.tsx","page/story-page/page-main.tsx","page/story-page/index.tsx","theme/theme.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["gradient","colors","type","join","linearGradient","bg","zIndex","position","height","width","background","useStyles","makeStyles","container","display","flexDirection","alignItems","header","justifyContent","dynamicHeader","props","headerHeight","paddingTop","particlesContainer","main","flex","BgContainer","p","styles","styleOptions","className","id","options","particlesConf","getResource","resource","Images","gift","broom","child","iconBroom","iconChild","iconSunnyHome","iconTogether","pieceBroom","pieceChild","pieceSunnyHome","pieceTogether","sunnyHome","together","Anim","repeat","style","animationDuration","duration","animationDelay","delay","children","Gift","history","useHistory","Box","onClick","push","STORY_PAGE","bgcolor","borderRadius","src","alt","GameCompletionDialog","Dialog","open","Typography","align","variant","mb","Icon","imgPath","IconBroom","IconChild","IconSunnyHome","IconTogether","iconSize","question","color","answer","backgroundColor","QuestionAnswer","revealed","GameTitle","DottedLine","letterSpacing","fontSize","GameHeader","Container","maxWidth","revealedCardNames","includes","CHILD","SUNNY_HOME","TOGETHER","BROOM","url","img","bgImg","card","transition","backgroundSize","backgroundRepeat","backgroundPosition","padding","border","cardRevealed","transform","backgroundImage","image","frontSideImg","FlipCard","role","GameMain","renderRow","cards","map","c","m","onCardClick","key","content","R","useFlipCardGame","hookParams","array","initCards","concat","index","name","locked","useState","x","order","Math","random","setCards","useEffect","revealedCards","filter","length","cardsContent","eq","setTimeout","useMemo","sort","completed","every","flipCardById","changedCards","gameSetting","GamePage","init","s","setS","useBoolState","completionDialogState","openCompletionDialog","button","Button","buttonFont","fontWeight","LandingPage","Card","margin","GAME_PAGE","StoryTitle","CenterBox","storyCard","marginBottom","backdropFilter","CardContainer","PropagandaCard","mt","marginLeft","marginRight","iconContainer","storyCardBottom","mainImg","StoryCard","iconImg","title","ml","mr","desc","bottomImg","storyCardSetting","StoryPageMain","autoPlay","i","StoryPage","theme","createMuiTheme","palette","primary","contrastText","secondary","text","App","ThemeProvider","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c37f77e3.chunk.js","sourcesContent":["const gradient = (colors: string[], type: 'linear' | 'radial') => `${type}-gradient(${colors.join(',')})`\nexport const linearGradient = (colors: Parameters<typeof gradient>[0]) => gradient(colors, 'linear')\nexport const radialGradient = (colors: Parameters<typeof gradient>[0]) => gradient(colors, 'radial')\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\nimport { linearGradient } from 'theme/style-utils'\n\nexport type StyleProps = {\n\theaderHeight?: string\n}\n\nconst particlesContainer: CSSProperties = {\n\tposition: 'absolute',\n\theight: '100vh',\n\twidth: '100vw',\n\tzIndex: 0\n}\nconst bg: CSSProperties = {\n\tzIndex: -1,\n\tposition: 'absolute',\n\theight: '100vh',\n\twidth: '100vw',\n\tbackground: linearGradient(['rgb(82, 49, 101)', 'rgb(221, 164, 146)'])\n}\nconst dynamicHeader = { height: (props: StyleProps) => props.headerHeight ?? '16vh', paddingTop: '6vh', zIndex: 1 }\n\nconst header: CSSProperties = {\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\tjustifyContent: 'space-between'\n}\n\nconst container: CSSProperties = {\n\theight: '100vh',\n\tposition: 'relative',\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\talignItems: 'center'\n}\n\nconst main: CSSProperties = {\n\tflex: 1,\n\tdisplay: 'flex',\n\talignItems: 'center'\n}\n\nexport const useStyles = makeStyles({ container, header, dynamicHeader, particlesContainer, bg, main })\n","import React from 'react'\nimport { StyleProps, useStyles } from './index.style'\nimport Particles from 'react-tsparticles'\nimport particlesConf from 'component/particles/particles-config-snow.json'\n\nexport type BgContainerProps = {\n\theader: JSX.Element | JSX.Element[]\n\tmain: JSX.Element | JSX.Element[]\n} & { styleOptions?: StyleProps }\n\nconst BgContainer = (p: BgContainerProps) => {\n\tconst styles = useStyles(p.styleOptions)\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<div className={styles.bg} />\n\t\t\t<div className={styles.particlesContainer}>\n\t\t\t\t<Particles id='tsparticles' className={styles.particlesContainer} options={particlesConf} />\n\t\t\t</div>\n\t\t\t<header className={`${styles.header} ${styles.dynamicHeader}`}>{p.header}</header>\n\t\t\t<main className={styles.main}>{p.main}</main>\n\t\t</div>\n\t)\n}\nexport default BgContainer\n","// cos = cloud object storage\nconst cosPath = `https://images-1304250879.cos.ap-nanjing.myqcloud.com/`\nexport const getResource = (resource: string) => cosPath + resource\n\nexport const Images = {\n\tgift: getResource('gift.svg'),\n\tbroom: getResource('broom.svg'),\n\tchild: getResource('child.svg'),\n\ticonBroom: getResource('icon-broom.svg'),\n\ticonChild: getResource('icon-child.svg'),\n\ticonSunnyHome: getResource('icon-sunny-home.svg'),\n\ticonTogether: getResource('icon-together.svg'),\n\tpieceBroom: getResource('piece-broom.svg'),\n\tpieceChild: getResource('piece-child.svg'),\n\tpieceSunnyHome: getResource('piece-sunny-home.svg'),\n\tpieceTogether: getResource('piece-together.svg'),\n\tsunnyHome: getResource('sunny-home.svg'),\n\ttogether: getResource('together.svg'),\n\tbg: getResource('bg.svg')\n}\n","import React from 'react'\n\nexport type AnimType = 'bounce' | 'bounceIn'\n\nexport type AnimProps = {\n\ttype: AnimType\n\tchildren: JSX.Element\n\tduration?: number\n\tdelay?: number\n\trepeat?: boolean\n}\n\nconst Anim = (p: AnimProps) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={`\n        animate__animated\n        animate__${p.type}\n        ${p.repeat ? 'animate__infinite\tinfinite' : ''}\n      `}\n\t\t\tstyle={{\n\t\t\t\tanimationDuration: `${p.duration || 1}s`,\n\t\t\t\tanimationDelay: `${p.delay || 0}s`\n\t\t\t}}\n\t\t>\n\t\t\t{p.children}\n\t\t</div>\n\t)\n}\n\nexport default Anim\n","import { Box, Dialog, DialogProps, Typography } from '@material-ui/core'\nimport { STORY_PAGE } from 'App'\nimport Anim from 'component/anim'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Images } from 'utils/cos-resource'\n\nconst Gift = () => {\n\tconst history = useHistory()\n\tconst onGiftClick = () => {\n\t\thistory.push(STORY_PAGE)\n\t}\n\n\treturn (\n\t\t<Anim type='bounce' repeat>\n\t\t\t<Box\n\t\t\t\tonClick={onGiftClick}\n\t\t\t\tbgcolor='rgb(252, 227, 227)'\n\t\t\t\tborderRadius='50%'\n\t\t\t\theight='80px'\n\t\t\t\twidth='80px'\n\t\t\t\tdisplay='flex'\n\t\t\t\tjustifyContent='center'\n\t\t\t>\n\t\t\t\t<img src={Images.gift} alt='gift' />\n\t\t\t</Box>\n\t\t</Anim>\n\t)\n}\n\nexport type GameCompletionDialogProps = {} & Pick<DialogProps, 'open'>\nconst GameCompletionDialog = (p: GameCompletionDialogProps) => {\n\treturn (\n\t\t<Dialog open={p.open}>\n\t\t\t<Box height='36vh' p={2}>\n\t\t\t\t<Box height='18vh' display='flex' justifyContent='center' alignItems='center'>\n\t\t\t\t\t<Gift />\n\t\t\t\t</Box>\n\t\t\t\t<Typography align='center' variant='h5'>\n\t\t\t\t\t解锁故事成功\n\t\t\t\t</Typography>\n\t\t\t\t<Box mb={1} />\n\t\t\t\t<Typography align='center' variant='body1'>\n\t\t\t\t\t恭喜完成挑战，符号的意义解锁中…\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t</Dialog>\n\t)\n}\nexport default GameCompletionDialog\n","import React from 'react'\nimport { Images } from 'utils/cos-resource'\n\nexport type IconProps = {\n\timgPath: string\n}\nexport const Icon = (p: IconProps) => {\n\treturn (\n\t\t<img\n\t\t\tstyle={{\n\t\t\t\theight: '28pt',\n\t\t\t\twidth: '25pt'\n\t\t\t}}\n\t\t\tsrc={p.imgPath}\n\t\t\talt='icon'\n\t\t></img>\n\t)\n}\n\nexport const IconBroom = () => <Icon imgPath={Images.iconBroom} />\nexport const IconChild = () => <Icon imgPath={Images.iconChild} />\nexport const IconSunnyHome = () => <Icon imgPath={Images.iconSunnyHome} />\nexport const IconTogether = () => <Icon imgPath={Images.iconTogether} />\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\n\nconst iconSize = {\n\theight: '50px',\n\twidth: '50px',\n\tborderRadius: '50%'\n}\n\nconst question: CSSProperties = {\n\t...iconSize,\n\tcolor: 'white'\n}\nconst answer: CSSProperties = {\n\t...iconSize,\n\tbackgroundColor: 'rgb(252, 227, 227)'\n}\nexport const useStyles = makeStyles({ question, answer })\n","import { Box } from '@material-ui/core'\nimport Anim from 'component/anim'\nimport React from 'react'\nimport { useStyles } from './index.style'\nimport HelpTwoToneIcon from '@material-ui/icons/HelpTwoTone'\n\nexport type QuestionAnswerProps = {\n\trevealed?: boolean\n\tanswer: JSX.Element\n}\nconst QuestionAnswer = (p: QuestionAnswerProps) => {\n\tconst styles = useStyles()\n\treturn p.revealed ? (\n\t\t<Anim type='bounceIn'>\n\t\t\t<Box display='flex' justifyContent='center' alignItems='center' className={styles.answer}>\n\t\t\t\t{p.answer}\n\t\t\t</Box>\n\t\t</Anim>\n\t) : (\n\t\t<HelpTwoToneIcon className={styles.question} />\n\t)\n}\nexport default QuestionAnswer\n","import { Typography } from '@material-ui/core'\nimport React from 'react'\n\nexport type GameTitleProps = {}\nconst GameTitle = (p: GameTitleProps) => {\n\treturn (\n\t\t<div>\n\t\t\t<Typography variant='h4' align='center' color='textSecondary'>\n\t\t\t\t记忆考验\n\t\t\t</Typography>\n\t\t</div>\n\t)\n}\nexport default GameTitle\n","import { Container, Box } from '@material-ui/core'\nimport { IconChild, IconSunnyHome, IconTogether, IconBroom } from 'component/icons'\nimport QuestionAnswer from 'component/question-answer'\nimport React from 'react'\nimport GameTitle from 'view/game-title'\nimport { BROOM, CHILD, SUNNY_HOME, TOGETHER } from '.'\n\nconst DottedLine = () => {\n\treturn (\n\t\t<Box color='white' letterSpacing={2} fontSize='25px'>\n\t\t\t·····\n\t\t</Box>\n\t)\n}\n\nexport type GameTitleProps = {\n\trevealedCardNames: string[]\n}\nconst GameHeader = (p: GameTitleProps) => {\n\treturn (\n\t\t<>\n\t\t\t<GameTitle />\n\t\t\t<Container>\n\t\t\t\t<Box\n\t\t\t\t\tdisplay='flex'\n\t\t\t\t\tflexDirection='row'\n\t\t\t\t\talignItems='center'\n\t\t\t\t\tjustifyContent='space-between'\n\t\t\t\t\twidth='90vw'\n\t\t\t\t\tmaxWidth='500px'\n\t\t\t\t>\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(CHILD)} answer={<IconChild />} />\n\t\t\t\t\t<DottedLine />\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(SUNNY_HOME)} answer={<IconSunnyHome />} />\n\t\t\t\t\t<DottedLine />\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(TOGETHER)} answer={<IconTogether />} />\n\t\t\t\t\t<DottedLine />\n\t\t\t\t\t<QuestionAnswer revealed={p.revealedCardNames.includes(BROOM)} answer={<IconBroom />} />\n\t\t\t\t</Box>\n\t\t\t</Container>\n\t\t</>\n\t)\n}\nexport default GameHeader\n","import { makeStyles } from '@material-ui/core'\nimport { Images } from 'utils/cos-resource'\n\nconst url = (img: string) => `url(${img})`\nconst bgImg = Images.bg\n\nconst cardHeight = '16vh'\nconst cardWidth = '38vw'\n\ntype CardStyleProps = {\n\trevealed: boolean\n\tfrontSideImg: string\n}\n\nconst card = {\n\theight: cardHeight,\n\twidth: cardWidth,\n\tmaxWidth: '200px',\n\tborderRadius: '10px',\n\ttransition: 'all 0.2s ease-in',\n\tbackgroundSize: 'contain',\n\tbackgroundRepeat: 'no-repeat',\n\tbackgroundPosition: 'center',\n\tbackgroundColor: '#fce3e3',\n\tpadding: '0 3px',\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tborder: '2px solid white'\n}\n\nconst cardRevealed = {\n\t...card,\n\ttransform: 'rotateY(180deg)',\n\tbackgroundSize: 'cover',\n\tbackgroundImage: url(bgImg)\n}\n\nconst image = {\n\tbackgroundImage: (p: CardStyleProps) => (p.revealed ? url(p.frontSideImg) : 'none'),\n\tbackgroundSize: 'contain',\n\tbackgroundPosition: 'center',\n\tbackgroundRepeat: 'no-repeat',\n\theight: '80%',\n\twidth: '100%'\n}\n\nexport const useStyles = makeStyles({\n\tcard,\n\tcardRevealed,\n\timage\n})\n","import React from 'react'\nimport { useStyles } from './index.style'\n\nexport type FlipCardProps = {\n\trevealed: boolean\n\tfrontSideImg: string\n}\n\nconst FlipCard = (p: FlipCardProps) => {\n\tconst styles = useStyles(p)\n\treturn (\n\t\t<div role='none' className={p.revealed ? styles.card : styles.cardRevealed}>\n\t\t\t<div className={styles.image} />\n\t\t</div>\n\t)\n}\n\nexport default FlipCard\n","import * as R from 'ramda'\nimport { Box, Container } from '@material-ui/core'\nimport FlipCard from 'component/flip-card'\nimport React from 'react'\nimport { FlipCardType } from './hooks/flip-card'\n\nexport type GameMainProps = {\n\tcards: FlipCardType[]\n\tonCardClick: (p: FlipCardType) => any\n}\n\nconst GameMain = (p: GameMainProps) => {\n\tconst renderRow = (cards: FlipCardType[]) => (\n\t\t<Box display='flex' flexDirection='row'>\n\t\t\t{cards.map(c => (\n\t\t\t\t<Box m={1} onClick={() => p.onCardClick(c)} key={c.id} zIndex={1}>\n\t\t\t\t\t<FlipCard revealed={c.revealed} frontSideImg={c.content} />\n\t\t\t\t</Box>\n\t\t\t))}\n\t\t</Box>\n\t)\n\treturn (\n\t\t<Container>\n\t\t\t<Box display='flex' flexDirection='column' alignItems='center'>\n\t\t\t\t{renderRow(R.slice(0, 2, p.cards))}\n\t\t\t\t{renderRow(R.slice(2, 4, p.cards))}\n\t\t\t\t{renderRow(R.slice(4, 6, p.cards))}\n\t\t\t\t{renderRow(R.slice(6, 8, p.cards))}\n\t\t\t</Box>\n\t\t</Container>\n\t)\n}\nexport default GameMain\n","import * as R from 'ramda'\nimport { useEffect, useMemo, useState } from 'react'\nimport { shuffleArray } from 'utils/randomizer'\n\nexport type FlipCardType = {\n\tid: number\n\tname: string\n\tcontent: string\n\trevealed: boolean\n\tlocked: boolean\n}\n\nconst delayTimeForPlayingFlippingAnim = 400\n\nexport const useFlipCardGame = (hookParams: Pick<FlipCardType, 'content' | 'name'>[]) => {\n\tconst initCards = hookParams.concat(hookParams).map((p, index) => ({\n\t\tid: index,\n\t\tname: p.name,\n\t\tcontent: p.content,\n\t\trevealed: false,\n\t\tlocked: false\n\t}))\n\n\tconst [cards, setCards] = useState<FlipCardType[]>(shuffleArray(initCards))\n\n\t/** when there are 2 cards being revealed, the content of them will be checked */\n\t/** 1. same content -> keep them revealed & mark them locked (locked means not operable any more) */\n\t/** 2. different content -> hide them */\n\tuseEffect(() => {\n\t\tconst revealedCards = cards.filter(R.compose(R.not, R.prop('locked'))).filter(R.prop('revealed'))\n\t\tif (revealedCards.length !== 2) return\n\t\tconst cardsContent = revealedCards.map(R.prop('content'))\n\t\tconst eq = R.equals(cardsContent[0])\n\t\tconst areSameCards = R.all(eq)(cardsContent)\n\t\tif (areSameCards)\n\t\t\tsetTimeout(\n\t\t\t\t() => setCards(cards.map(c => (c.revealed ? { ...c, locked: true } : c))),\n\t\t\t\tdelayTimeForPlayingFlippingAnim\n\t\t\t)\n\t\telse\n\t\t\tsetTimeout(\n\t\t\t\t() => setCards(cards.map(c => (c.locked ? c : { ...c, revealed: false }))),\n\t\t\t\tdelayTimeForPlayingFlippingAnim\n\t\t\t)\n\t}, [cards, setCards])\n\n\tconst flipCardById = (id: FlipCardType['id']) => {\n\t\tconst flipCardIfIdMatch = (c: FlipCardType) => (c.id === id ? { ...c, revealed: true } : c)\n\t\tconst changedCards = cards.map(flipCardIfIdMatch)\n\t\tsetCards(changedCards)\n\t}\n\n\tconst revealedCardNames = useMemo(\n\t\t() => R.dropRepeats(cards.filter(R.prop('locked')).filter(R.prop('revealed')).map(R.prop('name')).sort()),\n\t\t[cards]\n\t)\n\n\tconst completed = useMemo(() => cards.every(c => c.locked), [cards])\n\n\treturn { cards, flipCardById, revealedCardNames, completed }\n}\n","import * as R from 'ramda'\n\nexport const shuffleArray = <T = unknown>(array: T[]) => {\n  const sorted = R.sortBy(R.prop('order'))(array.map(x => ({ ...x, order: Math.random() })))\n  return sorted.map(R.omit(['order']))\n}","import BgContainer from 'component/bg-container'\nimport React, { useEffect } from 'react'\nimport { Images } from 'utils/cos-resource'\nimport GameCompletionDialog from './completion-dialog'\nimport GameHeader from './page-header'\nimport GameMain from './page-main'\nimport { useFlipCardGame } from './hooks/flip-card'\nimport { useBoolState } from './hooks/use-bool'\n\nexport const SUNNY_HOME = 'sunnyHome'\nexport const CHILD = 'child'\nexport const TOGETHER = 'together'\nexport const BROOM = 'broom'\n\nconst gameSetting = [\n\t{ name: SUNNY_HOME, content: Images.sunnyHome },\n\t{ name: CHILD, content: Images.child },\n\t{ name: TOGETHER, content: Images.together },\n\t{ name: BROOM, content: Images.broom }\n]\n\nexport type GamePageProps = {}\nconst GamePage = (p: GamePageProps) => {\n\tconst { cards, flipCardById, revealedCardNames, completed } = useFlipCardGame(gameSetting)\n\tconst [completionDialogState, openCompletionDialog] = useBoolState(false)\n\n\tuseEffect(() => {\n\t\tif (completed) {\n\t\t\topenCompletionDialog()\n\t\t}\n\t}, [completed, openCompletionDialog])\n\n\treturn (\n\t\t<div>\n\t\t\t<BgContainer\n\t\t\t\theader={<GameHeader revealedCardNames={revealedCardNames} />}\n\t\t\t\tmain={<GameMain cards={cards} onCardClick={c => flipCardById(c.id)} />}\n\t\t\t/>\n\t\t\t<GameCompletionDialog open={completionDialogState} />\n\t\t</div>\n\t)\n}\nexport default GamePage\n","import { useState } from 'react'\n\ntype HookReturnType = [boolean, () => void, () => void]\nexport const useBoolState = (init: boolean | (() => boolean)): HookReturnType => {\n\tconst [s, setS] = useState(init)\n\treturn [s, () => setS(true), () => setS(false)]\n}\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\n\nconst button: CSSProperties = {\n\tborderRadius: '1000px',\n\twidth: '76vw',\n\theight: '6vh'\n}\n\nexport const useStyles = makeStyles({ button })\n","import { ButtonProps as MuiButtonProps, Button as MuiButton } from '@material-ui/core'\nimport React from 'react'\nimport { useStyles } from './index.style'\n\nexport type ButtonProps = {} & MuiButtonProps\nconst Button = (p: ButtonProps) => {\n\tconst styles = useStyles()\n\treturn <MuiButton className={styles.button} {...p} />\n}\nexport default Button\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\n\nconst header: CSSProperties = { height: '16vh', paddingTop: '6vh' }\nconst card: CSSProperties = {\n\theight: '57vh',\n\twidth: '76vw',\n\tborderRadius: '20px'\n}\nconst button: CSSProperties = {\n\tbackgroundColor: 'white',\n\tborderRadius: '1000px',\n\twidth: '76vw',\n\theight: '6vh'\n}\nconst buttonFont: CSSProperties = {\n\tfontWeight: 'bold'\n}\n\nexport const useStyles = makeStyles({ header, card, button, buttonFont })\n","import { Box, Card, Typography } from '@material-ui/core'\nimport { GAME_PAGE } from 'App'\nimport BgContainer from 'component/bg-container'\nimport Button from 'component/button'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport GameTitle from 'view/game-title'\nimport { useStyles } from './index.style'\n\nexport type LandingPageProps = {}\nconst LandingPage = (p: LandingPageProps) => {\n\tconst styles = useStyles()\n\tconst history = useHistory()\n\t/* -------------------------------------------------------------------------- */\n\t/*                                event handler                               */\n\t/* -------------------------------------------------------------------------- */\n\tconst onStartGameButtonClick = () => {\n\t\thistory.push(GAME_PAGE)\n\t}\n\treturn (\n\t\t<BgContainer\n\t\t\theader={\n\t\t\t\t<>\n\t\t\t\t\t<GameTitle />\n\t\t\t\t\t<Typography variant='body2' align='center' color='textSecondary'>\n\t\t\t\t\t\t翻开卡牌，寻找故事碎片\n\t\t\t\t\t</Typography>\n\t\t\t\t</>\n\t\t\t}\n\t\t\tmain={\n\t\t\t\t<Box>\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t<Card className={styles.card}></Card>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</section>\n\t\t\t\t\t<Box margin={6} />\n\t\t\t\t\t<section>\n\t\t\t\t\t\t<Box display='flex' justifyContent='center'>\n\t\t\t\t\t\t\t<Button variant='contained' onClick={onStartGameButtonClick}>\n\t\t\t\t\t\t\t\t<Typography className={styles.buttonFont} variant='body2' align='center' color='textPrimary'>\n\t\t\t\t\t\t\t\t\t开始游戏\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</section>\n\t\t\t\t</Box>\n\t\t\t}\n\t\t/>\n\t)\n}\nexport default LandingPage\n","import { Box, Typography } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport type StoryTitleProps = {};\nconst StoryTitle = (p: StoryTitleProps) => {\n  return (\n    <div>\n      <Typography variant=\"h4\" align=\"center\" color=\"textSecondary\">\n        故事详情\n      </Typography>\n      <Box margin={2} />\n    </div>\n  );\n};\nexport default StoryTitle;\n","import { Box, BoxProps } from '@material-ui/core'\nimport React from 'react'\n\nexport type CenterBoxProps = {\n\tchildren: JSX.Element\n} & BoxProps\n\nconst CenterBox = (p: CenterBoxProps) => {\n\treturn (\n\t\t<Box display='flex' justifyContent='center' alignItems='center' {...p}>\n\t\t\t{p.children}\n\t\t</Box>\n\t)\n}\nexport default CenterBox\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\nimport { linearGradient } from 'theme/style-utils'\n\nconst storyCard: CSSProperties = {\n\twidth: '90vw',\n\theight: '70vh',\n\tborderRadius: '16px',\n\tmarginBottom: '40px',\n\tbackground: linearGradient(['rgb(255,255,255,0.55)', 'rgb(255,255,255)']),\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\tjustifyContent: 'space-between',\n\talignItems: 'center',\n\tbackdropFilter: 'blur(2.5px)'\n}\n\nexport const useStyles = makeStyles({ storyCard })\n","import { Card } from '@material-ui/core'\nimport CenterBox from 'component/center-box'\nimport React from 'react'\nimport { useStyles } from './card-container.style'\n\nexport type CardContainerProps = {\n\tchildren: JSX.Element[] | JSX.Element\n}\nconst CardContainer = (p: CardContainerProps) => {\n\tconst styles = useStyles()\n\treturn (\n\t\t<CenterBox>\n\t\t\t<Card className={styles.storyCard}>{p.children}</Card>\n\t\t</CenterBox>\n\t)\n}\n\nexport default CardContainer\n","import { Box, Typography } from '@material-ui/core'\nimport Button from 'component/button'\nimport React from 'react'\nimport CardContainer from './card-container'\n\nexport type PropagandaCardProps = {}\nconst PropagandaCard = (p: PropagandaCardProps) => {\n\treturn (\n\t\t<CardContainer>\n\t\t\t<Box mt={12} display='flex' alignItems='center' flexDirection='column'>\n\t\t\t\t<Box width={180}>\n\t\t\t\t\t<Typography align='center' variant='h5'>\n\t\t\t\t\t\t对心智障碍人群 多一点关心\n\t\t\t\t\t</Typography>\n\t\t\t\t</Box>\n\t\t\t\t<Box mt={5} />\n\t\t\t\t<Box width={260}>\n\t\t\t\t\t<Typography variant='body2' align='center'>\n\t\t\t\t\t\t你可以怎么做。你可以怎么做。你可以怎么做。你可以怎么做。你可以怎么做。你可以怎么做。你可以怎么做。你可以怎么做。你可以怎么做。你可以怎么做。\n\t\t\t\t\t</Typography>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Box display='flex' flexDirection='column' alignItems='center' mb={6}>\n\t\t\t\t<Button variant='contained' color='primary'>\n\t\t\t\t\t让更多人看见\n\t\t\t\t</Button>\n\t\t\t\t<Box mt={2} />\n\t\t\t\t<Button variant='contained' color='secondary'>\n\t\t\t\t\t了解阳光家园\n\t\t\t\t</Button>\n\t\t\t</Box>\n\t\t</CardContainer>\n\t)\n}\nexport default PropagandaCard\n","import { makeStyles } from '@material-ui/core'\nimport { CSSProperties } from '@material-ui/core/styles/withStyles'\nimport { linearGradient } from 'theme/style-utils'\n\nconst storyCard: CSSProperties = {\n\tmarginLeft: '26px',\n\tmarginRight: '26px',\n\theight: '70vh',\n\tborderRadius: '16px',\n\tmarginBottom: '40px',\n\tbackground: linearGradient(['rgb(255,255,255,0.55)', 'rgb(255,255,255)']),\n\tdisplay: 'flex',\n\tflexDirection: 'column',\n\tjustifyContent: 'space-between',\n\talignItems: 'center',\n\tbackdropFilter: 'blur(2.5px)'\n}\n\nconst iconContainer: CSSProperties = {\n\theight: '50px',\n\twidth: '50px',\n\tborderRadius: '50%',\n\tbackgroundColor: 'rgb(252, 227, 227)',\n\tborder: '2px white solid'\n}\n\nconst storyCardBottom: CSSProperties = {\n\theight: '17vh',\n\twidth: '100%',\n\tbackgroundColor: 'rgb(252, 227, 227)',\n\tdisplay: 'flex',\n\tjustifyContent: 'center',\n\talignItems: 'flex-end'\n}\n\nconst mainImg: CSSProperties = {\n\theight: '22vh',\n\twidth: '100%',\n\tborder: 'solid 1px black'\n}\n\nexport const useStyles = makeStyles({ storyCard, iconContainer, storyCardBottom, mainImg })\n","import { Box, Typography } from '@material-ui/core'\nimport CenterBox from 'component/center-box'\nimport { Icon, IconProps } from 'component/icons'\nimport React from 'react'\nimport CardContainer from './card-container'\nimport { useStyles } from './story-card.style'\n\nexport type StoryCardProps = {\n\ticonImg: IconProps['imgPath']\n\ttitle: string\n\tdesc: string\n\tmainImg: string\n\tbottomImg: string\n}\nconst StoryCard = (p: StoryCardProps) => {\n\tconst styles = useStyles()\n\treturn (\n\t\t<CardContainer>\n\t\t\t<Box display='flex' flexDirection='column' alignItems='center'>\n\t\t\t\t<CenterBox mt={4} mb={2} className={styles.iconContainer}>\n\t\t\t\t\t<Icon imgPath={p.iconImg} />\n\t\t\t\t</CenterBox>\n\t\t\t\t<Typography align='center' variant='h5'>\n\t\t\t\t\t{p.title}\n\t\t\t\t</Typography>\n\t\t\t</Box>\n\t\t\t<Box width='100%' display='flex' alignItems='center' flexDirection='column'>\n\t\t\t\t<Box ml={4} mr={4}>\n\t\t\t\t\t<img className={styles.mainImg} src={p.mainImg} alt='a story' />\n\t\t\t\t\t<Box mt={1} mb={2}>\n\t\t\t\t\t\t<Typography variant='body2'>{p.desc}</Typography>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\n\t\t\t\t<Box className={styles.storyCardBottom}>\n\t\t\t\t\t<img src={p.bottomImg} alt='background' />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</CardContainer>\n\t)\n}\nexport default StoryCard\n","import React from 'react'\nimport Carousel from 'react-material-ui-carousel'\nimport { Images } from 'utils/cos-resource'\nimport PropagandaCard from './propaganda-card'\nimport StoryCard, { StoryCardProps } from './story-card'\n\nexport type StoryPageMainProps = {}\nconst storyCardSetting: StoryCardProps[] = [\n\t{\n\t\ticonImg: Images.iconChild,\n\t\ttitle: '这辈子就这样了...',\n\t\tmainImg: 'https://picsum.photos/400/200.webp',\n\t\tbottomImg: Images.pieceChild,\n\t\tdesc:\n\t\t\t'“都已经这样了，还能怎么办？”一个心智障碍的孩子的出现，往往让一个家庭失去希望。缺乏能力，无法自理，需要被照顾，是这个群体的标签。'\n\t}\n]\n\nconst StoryPageMain = (p: StoryPageMainProps) => {\n\treturn (\n\t\t<div>\n\t\t\t<Carousel autoPlay={false}>\n\t\t\t\t{storyCardSetting.map((s, i) => (\n\t\t\t\t\t<StoryCard key={i} {...s} />\n\t\t\t\t))}\n\t\t\t\t<PropagandaCard />\n\t\t\t</Carousel>\n\t\t</div>\n\t)\n}\nexport default StoryPageMain\n","import BgContainer from 'component/bg-container'\nimport React from 'react'\nimport StoryTitle from 'view/story-title'\nimport StoryPageMain from './page-main'\n\nexport type StoryPageProps = {}\nconst StoryPage = (p: StoryPageProps) => {\n\treturn (\n\t\t<BgContainer\n\t\t\tstyleOptions={{\n\t\t\t\theaderHeight: '10vh'\n\t\t\t}}\n\t\t\theader={<StoryTitle />}\n\t\t\tmain={<StoryPageMain />}\n\t\t/>\n\t)\n}\n\nexport default StoryPage\n","import { createMuiTheme } from '@material-ui/core'\n\nconst colorGrape = 'rgb(82, 49, 101)'\nconst colorWhite = 'rgb(255, 255, 255)'\n\nexport const theme = createMuiTheme({\n\tpalette: {\n\t\tprimary: {\n\t\t\tmain: colorGrape,\n\t\t\tcontrastText: colorWhite\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: colorWhite,\n\t\t\tcontrastText: colorGrape\n\t\t},\n\t\ttext: {\n\t\t\tprimary: colorGrape,\n\t\t\tsecondary: colorWhite\n\t\t}\n\t}\n})\n","import { ThemeProvider } from '@material-ui/core'\nimport GamePage from 'page/game-page'\nimport LandingPage from 'page/landing-page'\nimport StoryPage from 'page/story-page'\nimport React from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport { theme } from 'theme/theme'\n\nexport const LANDING_PAGE = '/'\nexport const GAME_PAGE = '/game'\nexport const STORY_PAGE = '/story'\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<Route path={LANDING_PAGE} exact>\n\t\t\t\t\t\t<LandingPage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={GAME_PAGE}>\n\t\t\t\t\t\t<GamePage />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path={STORY_PAGE}>\n\t\t\t\t\t\t<StoryPage />\n\t\t\t\t\t</Route>\n\t\t\t\t</BrowserRouter>\n\t\t\t</ThemeProvider>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}